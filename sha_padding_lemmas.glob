DIGEST 04215283e590919fe2bcad34a46682a5
Fsha_padding_lemmas
R15:20 SHA256 <> <> lib
R38:48 pure_lemmas <> <> lib
R66:71 Coqlib <> <> lib
R89:96 Integers <> <> lib
ind 145:150 <> Prefix
constr 197:201 <> p_nil
constr 242:247 <> p_self
constr 287:292 <> p_cons
constr 376:383 <> p_append
R175:178 Coq.Init.Datatypes <> list ind
R165:168 Coq.Init.Datatypes <> list ind
R217:220 Coq.Init.Datatypes <> list ind
R226:231 sha_padding_lemmas <> Prefix ind
R236:236 sha_padding_lemmas <> l var
R233:234 SHA256 <> ::'['_']' not
R263:266 Coq.Init.Datatypes <> list ind
R272:277 sha_padding_lemmas <> Prefix ind
R281:281 sha_padding_lemmas <> l var
R279:279 sha_padding_lemmas <> l var
R312:315 Coq.Init.Datatypes <> list ind
R345:350 sha_padding_lemmas <> Prefix ind
R364:367 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R363:363 sha_padding_lemmas <> x var
R368:369 sha_padding_lemmas <> l2 var
R354:357 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R353:353 sha_padding_lemmas <> x var
R358:359 sha_padding_lemmas <> l1 var
R329:334 sha_padding_lemmas <> Prefix ind
R339:340 sha_padding_lemmas <> l2 var
R336:337 sha_padding_lemmas <> l1 var
R403:406 Coq.Init.Datatypes <> list ind
R417:420 Coq.Init.Datatypes <> list ind
R442:447 sha_padding_lemmas <> Prefix ind
R455:458 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R453:454 sha_padding_lemmas <> l2 var
R459:460 sha_padding_lemmas <> l3 var
R449:450 sha_padding_lemmas <> l1 var
R426:431 sha_padding_lemmas <> Prefix ind
R436:437 sha_padding_lemmas <> l2 var
R433:434 sha_padding_lemmas <> l1 var
ind 569:575 <> InWords
constr 601:609 <> words_nil
constr 628:637 <> words_word
R579:582 Coq.Init.Datatypes <> list ind
R584:584 Coq.Numbers.BinNums <> Z ind
R613:619 sha_padding_lemmas <> InWords ind
R621:622 SHA256 <> ::'['_']' not
R659:659 Coq.Numbers.BinNums <> Z ind
R669:672 Coq.Init.Datatypes <> list ind
R674:674 Coq.Numbers.BinNums <> Z ind
R712:718 sha_padding_lemmas <> InWords ind
R722:725 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R721:721 sha_padding_lemmas <> a var
R727:730 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R726:726 sha_padding_lemmas <> b var
R732:735 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R731:731 sha_padding_lemmas <> c var
R737:740 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R736:736 sha_padding_lemmas <> d var
R741:743 sha_padding_lemmas <> msg var
R697:703 sha_padding_lemmas <> InWords ind
R705:707 sha_padding_lemmas <> msg var
R793:805 Coq.Numbers.Natural.Peano.NPeano <> divide def
R835:845 Coqlib <> list_repeat def
prf 874:883 <> fstpad_len
R903:906 Coq.Init.Datatypes <> list ind
R908:908 Coq.Numbers.BinNums <> Z ind
R1021:1023 Coq.Init.Logic <> :type_scope:x_'='_x not
R916:931 Coq.Init.Datatypes <> length def
R937:940 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R934:936 sha_padding_lemmas <> msg var
R946:966 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R941:941 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R945:945 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R967:977 Coqlib <> list_repeat def
R980:987 Coq.ZArith.BinInt Z to_nat def
R1009:1013 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R990:992 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R1008:1008 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R1004:1006 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R993:999 Coq.ZArith.Zcomplements <> Zlength def
R1001:1003 sha_padding_lemmas <> msg var
R1045:1048 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R1090:1090 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R1025:1040 Coq.Init.Datatypes <> length def
R1042:1044 sha_padding_lemmas <> msg var
R1049:1049 Coq.Init.Datatypes <> S constr
R1052:1059 Coq.ZArith.BinInt Z to_nat def
R1081:1085 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R1062:1064 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R1080:1080 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R1076:1078 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R1065:1071 Coq.ZArith.Zcomplements <> Zlength def
R1073:1075 sha_padding_lemmas <> msg var
R1142:1147 Coq.Init.Datatypes <> length def
R1163:1172 Coq.Lists.List <> app_length thm
R1163:1172 Coq.Lists.List <> app_length thm
R1198:1208 Coqlib <> list_repeat def
R1224:1241 Coqlib <> length_list_repeat thm
R1224:1241 Coqlib <> length_list_repeat thm
prf 1324:1342 <> total_pad_len_Zlist
R1360:1363 Coq.Init.Datatypes <> list ind
R1365:1365 Coq.Numbers.BinNums <> Z ind
R1460:1467 Coq.Init.Logic <> :type_scope:x_'='_x not
R1375:1380 Coq.Init.Datatypes <> length def
R1393:1396 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R1390:1392 sha_padding_lemmas <> msg var
R1402:1405 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R1397:1397 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R1401:1401 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R1406:1416 Coqlib <> list_repeat def
R1419:1426 Coq.ZArith.BinInt Z to_nat def
R1448:1452 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R1429:1431 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R1447:1447 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R1443:1445 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R1432:1438 Coq.ZArith.Zcomplements <> Zlength def
R1440:1442 sha_padding_lemmas <> msg var
R1479:1479 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R1534:1547 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R1525:1527 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R1480:1489 Coq.Numbers.Natural.Peano.NPeano <> div def
R1514:1516 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R1492:1499 Coq.ZArith.BinInt Z to_nat def
R1502:1508 Coq.ZArith.Zcomplements <> Zlength def
R1510:1512 sha_padding_lemmas <> msg var
R1548:1555 Coq.ZArith.BinInt Z to_nat def
R1557:1560 SHA256 <> WORD def
R1615:1624 sha_padding_lemmas <> fstpad_len thm
R1615:1624 sha_padding_lemmas <> fstpad_len thm
R1615:1624 sha_padding_lemmas <> fstpad_len thm
R1638:1638 Coq.Init.Datatypes <> S constr
R1641:1648 Coq.ZArith.BinInt Z to_nat def
R1670:1674 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R1651:1653 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R1669:1669 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R1665:1667 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R1654:1660 Coq.ZArith.Zcomplements <> Zlength def
R1692:1695 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R1733:1733 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R1696:1703 Coq.ZArith.BinInt Z to_nat def
R1725:1729 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R1706:1708 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R1724:1724 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R1720:1722 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R1709:1715 Coq.ZArith.Zcomplements <> Zlength def
R1692:1695 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R1733:1733 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R1696:1703 Coq.ZArith.BinInt Z to_nat def
R1725:1729 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R1706:1708 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R1724:1724 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R1720:1722 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R1709:1715 Coq.ZArith.Zcomplements <> Zlength def
R1638:1638 Coq.Init.Datatypes <> S constr
R1641:1648 Coq.ZArith.BinInt Z to_nat def
R1670:1674 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R1651:1653 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R1669:1669 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R1665:1667 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R1654:1660 Coq.ZArith.Zcomplements <> Zlength def
R1826:1838 Coq.Numbers.Natural.Peano.NPeano <> divide def
prf 1848:1859 <> InWords_len4
R1875:1878 Coq.Init.Datatypes <> list ind
R1880:1880 Coq.Numbers.BinNums <> Z ind
R1951:1957 sha_padding_lemmas <> InWords ind
R1959:1959 sha_padding_lemmas <> l var
R1907:1919 Coq.Numbers.Natural.Peano.NPeano <> divide def
R1938:1943 Coq.Init.Datatypes <> length def
R1945:1945 sha_padding_lemmas <> l var
R1922:1929 Coq.ZArith.BinInt Z to_nat def
R1931:1934 SHA256 <> WORD def
R2067:2075 sha_padding_lemmas <> words_nil constr
R2067:2075 sha_padding_lemmas <> words_nil constr
R2273:2282 sha_padding_lemmas <> words_word constr
R2273:2282 sha_padding_lemmas <> words_word constr
prf 2370:2380 <> pad_inwords
R2400:2403 Coq.Init.Datatypes <> list ind
R2405:2405 Coq.Numbers.BinNums <> Z ind
R2413:2419 sha_padding_lemmas <> InWords ind
R2425:2428 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R2422:2424 sha_padding_lemmas <> msg var
R2434:2454 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R2429:2429 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R2433:2433 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R2455:2465 Coqlib <> list_repeat def
R2468:2475 Coq.ZArith.BinInt Z to_nat def
R2497:2501 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R2478:2480 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R2496:2496 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R2492:2494 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R2481:2487 Coq.ZArith.Zcomplements <> Zlength def
R2489:2491 sha_padding_lemmas <> msg var
R2540:2551 sha_padding_lemmas <> InWords_len4 thm
R2540:2551 sha_padding_lemmas <> InWords_len4 thm
R2567:2585 sha_padding_lemmas <> total_pad_len_Zlist prfax
R2567:2585 sha_padding_lemmas <> total_pad_len_Zlist prfax
R2619:2631 Coq.Numbers.Natural.Peano.NPeano <> divide def
R2685:2687 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R2644:2653 Coq.Numbers.Natural.Peano.NPeano <> div def
R2678:2680 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R2656:2663 Coq.ZArith.BinInt Z to_nat def
R2666:2672 Coq.ZArith.Zcomplements <> Zlength def
R2685:2687 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R2644:2653 Coq.Numbers.Natural.Peano.NPeano <> div def
R2678:2680 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R2656:2663 Coq.ZArith.BinInt Z to_nat def
R2666:2672 Coq.ZArith.Zcomplements <> Zlength def
def 2727:2733 <> fulllen
R2742:2742 Coq.Numbers.BinNums <> Z ind
R2759:2762 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R2781:2781 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R2753:2755 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R2750:2752 sha_padding_lemmas <> len var
R2774:2778 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R2763:2765 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R2773:2773 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R2769:2771 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R2766:2768 sha_padding_lemmas <> len var
R2801:2807 sha_padding_lemmas <> fulllen def
R3068:3074 sha_padding_lemmas <> fulllen def
R3118:3124 sha_padding_lemmas <> fulllen def
R3168:3174 sha_padding_lemmas <> fulllen def
R3219:3225 sha_padding_lemmas <> fulllen def
R3271:3277 sha_padding_lemmas <> fulllen def
R3314:3320 sha_padding_lemmas <> fulllen def
R3356:3362 sha_padding_lemmas <> fulllen def
R3385:3391 sha_padding_lemmas <> fulllen def
R3438:3438 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R3441:3446 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
def 3552:3554 <> pad
R3563:3566 Coq.Init.Datatypes <> list ind
R3568:3568 Coq.Numbers.BinNums <> Z ind
R3573:3576 Coq.Init.Datatypes <> list ind
R3578:3578 Coq.Numbers.BinNums <> Z ind
R3595:3601 Coq.ZArith.Zcomplements <> Zlength def
R3603:3605 sha_padding_lemmas <> msg var
R3615:3618 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3612:3614 sha_padding_lemmas <> msg var
R3626:3636 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3619:3619 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R3625:3625 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R3679:3688 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3637:3647 Coqlib <> list_repeat def
R3650:3657 Coq.ZArith.BinInt Z to_nat def
R3668:3672 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R3660:3661 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R3667:3667 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R3663:3665 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R3662:3662 sha_padding_lemmas <> n var
R3689:3704 SHA256 <> intlist_to_Zlist def
R3707:3707 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R3738:3739 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R3756:3756 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R3740:3747 Integers Int repr def
R3751:3753 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R3750:3750 sha_padding_lemmas <> n var
R3708:3715 Integers Int repr def
R3723:3725 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R3719:3721 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R3718:3718 sha_padding_lemmas <> n var
R3726:3736 Integers Int modulus def
def 3772:3788 <> generate_and_pad'
R3797:3800 Coq.Init.Datatypes <> list ind
R3802:3802 Coq.Numbers.BinNums <> Z ind
R3807:3810 Coq.Init.Datatypes <> list ind
R3812:3814 Integers <> int syndef
R3821:3836 SHA256 <> Zlist_to_intlist def
R3839:3841 sha_padding_lemmas <> pad def
R3843:3845 sha_padding_lemmas <> msg var
R3876:3891 SHA256 <> Zlist_to_intlist def
prf 3901:3908 <> app_left
R3930:3933 Coq.Init.Datatypes <> list ind
R3935:3935 Coq.Numbers.BinNums <> Z ind
R3958:3960 Coq.Init.Logic <> :type_scope:x_'='_x not
R3943:3946 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3942:3942 sha_padding_lemmas <> a var
R3948:3951 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3947:3947 sha_padding_lemmas <> b var
R3953:3956 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3952:3952 sha_padding_lemmas <> c var
R3957:3957 sha_padding_lemmas <> d var
R3961:3961 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3973:3977 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3963:3966 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3962:3962 sha_padding_lemmas <> a var
R3968:3971 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R3967:3967 sha_padding_lemmas <> b var
R3972:3972 sha_padding_lemmas <> c var
R3978:3978 sha_padding_lemmas <> d var
R4081:4083 Coq.Init.Logic <> :type_scope:x_'='_x not
R4069:4073 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4080:4080 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4075:4078 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4084:4084 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4091:4095 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4086:4089 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4081:4083 Coq.Init.Logic <> :type_scope:x_'='_x not
R4069:4073 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4080:4080 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4075:4078 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4084:4084 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4091:4095 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4086:4089 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4127:4135 Coq.Lists.List <> app_assoc thm
R4127:4135 Coq.Lists.List <> app_assoc thm
R4188:4196 Coq.Lists.List <> app_assoc thm
R4188:4196 Coq.Lists.List <> app_assoc thm
prf 4229:4245 <> pad_compose_equal
R4263:4266 Coq.Init.Datatypes <> list ind
R4268:4268 Coq.Numbers.BinNums <> Z ind
R4323:4325 Coq.Init.Logic <> :type_scope:x_'='_x not
R4302:4318 sha_padding_lemmas <> generate_and_pad' def
R4320:4322 sha_padding_lemmas <> msg var
R4326:4341 SHA256 <> generate_and_pad def
R4343:4345 sha_padding_lemmas <> msg var
R4378:4394 sha_padding_lemmas <> generate_and_pad' def
R4406:4408 sha_padding_lemmas <> pad def
R4420:4435 SHA256 <> generate_and_pad def
R4564:4574 sha_padding_lemmas <> pad_inwords thm
R4564:4574 sha_padding_lemmas <> pad_inwords thm
R4637:4644 sha_padding_lemmas <> app_left thm
R4637:4644 sha_padding_lemmas <> app_left thm
R4713:4716 Coq.Init.Datatypes <> list ind
R4718:4718 Coq.Numbers.BinNums <> Z ind
R4728:4730 Coq.Init.Logic <> :type_scope:x_'='_x not
R4723:4726 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4721:4722 SHA256 <> ::'['_']' not
R4727:4727 sha_padding_lemmas <> l var
R4731:4731 sha_padding_lemmas <> l var
R4713:4716 Coq.Init.Datatypes <> list ind
R4718:4718 Coq.Numbers.BinNums <> Z ind
R4728:4730 Coq.Init.Logic <> :type_scope:x_'='_x not
R4723:4726 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R4721:4722 SHA256 <> ::'['_']' not
R4727:4727 sha_padding_lemmas <> l var
R4731:4731 sha_padding_lemmas <> l var
R4784:4799 SHA256 <> intlist_to_Zlist def
R4809:4809 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R4850:4859 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R4886:4886 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R4860:4867 Integers Int repr def
R4881:4883 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4870:4876 Coq.ZArith.Zcomplements <> Zlength def
R4810:4817 Integers Int repr def
R4835:4837 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R4831:4833 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4820:4826 Coq.ZArith.Zcomplements <> Zlength def
R4838:4848 Integers Int modulus def
R4784:4799 SHA256 <> intlist_to_Zlist def
R4809:4809 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R4850:4859 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R4886:4886 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R4860:4867 Integers Int repr def
R4881:4883 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4870:4876 Coq.ZArith.Zcomplements <> Zlength def
R4810:4817 Integers Int repr def
R4835:4837 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R4831:4833 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R4820:4826 Coq.ZArith.Zcomplements <> Zlength def
R4838:4848 Integers Int modulus def
R4930:4956 pure_lemmas <> intlist_to_Zlist_to_intlist thm
R4930:4956 pure_lemmas <> intlist_to_Zlist_to_intlist thm
R5025:5040 SHA256 <> intlist_to_Zlist def
R5064:5070 Coq.Init.Logic <> f_equal thm
R5064:5070 Coq.Init.Logic <> f_equal thm
prf 5153:5158 <> prefix
R5176:5179 Coq.Init.Datatypes <> list ind
R5181:5181 Coq.Numbers.BinNums <> Z ind
R5204:5209 sha_padding_lemmas <> Prefix ind
R5216:5218 sha_padding_lemmas <> pad def
R5220:5222 sha_padding_lemmas <> msg var
R5211:5213 sha_padding_lemmas <> msg var
R5256:5258 sha_padding_lemmas <> pad def
R5269:5276 sha_padding_lemmas <> p_append constr
R5269:5276 sha_padding_lemmas <> p_append constr
R5287:5292 sha_padding_lemmas <> p_self constr
R5287:5292 sha_padding_lemmas <> p_self constr
R5462:5471 Coq.Numbers.Natural.Peano.NPeano <> div def
prf 5632:5652 <> total_pad_len_intlist
R5670:5673 Coq.Init.Datatypes <> list ind
R5675:5675 Coq.Numbers.BinNums <> Z ind
R5714:5722 Coq.Init.Logic <> :type_scope:x_'='_x not
R5685:5690 Coq.Init.Datatypes <> length def
R5693:5708 SHA256 <> generate_and_pad def
R5710:5712 sha_padding_lemmas <> msg var
R5776:5784 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5766:5768 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5725:5734 Coq.Numbers.Natural.Peano.NPeano <> div def
R5759:5761 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5737:5744 Coq.ZArith.BinInt Z to_nat def
R5747:5753 Coq.ZArith.Zcomplements <> Zlength def
R5755:5757 sha_padding_lemmas <> msg var
R5885:5887 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5844:5853 Coq.Numbers.Natural.Peano.NPeano <> div def
R5878:5880 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5856:5863 Coq.ZArith.BinInt Z to_nat def
R5866:5872 Coq.ZArith.Zcomplements <> Zlength def
R5885:5887 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5844:5853 Coq.Numbers.Natural.Peano.NPeano <> div def
R5878:5880 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R5856:5863 Coq.ZArith.BinInt Z to_nat def
R5866:5872 Coq.ZArith.Zcomplements <> Zlength def
R5914:5929 SHA256 <> generate_and_pad def
R5945:5954 Coq.Lists.List <> app_length thm
R5945:5954 Coq.Lists.List <> app_length thm
R6101:6113 Coq.Init.Logic <> :type_scope:x_'='_x not
R5967:5982 Coq.Init.Datatypes <> length def
R5991:6006 SHA256 <> Zlist_to_intlist def
R6021:6034 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6040:6043 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6044:6054 Coqlib <> list_repeat def
R6057:6064 Coq.ZArith.BinInt Z to_nat def
R6086:6090 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R6067:6069 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R6085:6085 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R6081:6083 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R6070:6076 Coq.ZArith.Zcomplements <> Zlength def
R6101:6113 Coq.Init.Logic <> :type_scope:x_'='_x not
R5967:5982 Coq.Init.Datatypes <> length def
R5991:6006 SHA256 <> Zlist_to_intlist def
R6021:6034 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6040:6043 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R6044:6054 Coqlib <> list_repeat def
R6057:6064 Coq.ZArith.BinInt Z to_nat def
R6086:6090 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R6067:6069 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R6085:6085 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R6081:6083 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R6070:6076 Coq.ZArith.Zcomplements <> Zlength def
R6148:6170 pure_lemmas <> length_Zlist_to_intlist thm
R6148:6170 pure_lemmas <> length_Zlist_to_intlist thm
R6188:6196 Coq.Arith.Mult <> mult_comm thm
R6188:6196 Coq.Arith.Mult <> mult_comm thm
R6233:6251 sha_padding_lemmas <> total_pad_len_Zlist prfax
R6233:6251 sha_padding_lemmas <> total_pad_len_Zlist prfax
R6263:6272 Coq.Numbers.Natural.Peano.NPeano <> div def
prf 6345:6367 <> length_equal_pad_length
R6386:6389 Coq.Init.Datatypes <> list ind
R6391:6391 Coq.Numbers.BinNums <> Z ind
R6402:6405 Coq.Init.Datatypes <> list ind
R6407:6407 Coq.Numbers.BinNums <> Z ind
R6484:6486 Coq.Init.Logic <> :type_scope:x_'='_x not
R6453:6459 Coq.ZArith.Zcomplements <> Zlength def
R6462:6477 SHA256 <> generate_and_pad def
R6479:6482 sha_padding_lemmas <> msg1 var
R6487:6493 Coq.ZArith.Zcomplements <> Zlength def
R6496:6511 SHA256 <> generate_and_pad def
R6513:6516 sha_padding_lemmas <> msg2 var
R6428:6431 Coq.Init.Logic <> :type_scope:x_'='_x not
R6416:6422 Coq.ZArith.Zcomplements <> Zlength def
R6424:6427 sha_padding_lemmas <> msg1 var
R6432:6438 Coq.ZArith.Zcomplements <> Zlength def
R6440:6443 sha_padding_lemmas <> msg2 var
R6559:6565 Coq.ZArith.Zcomplements <> Zlength def
R6588:6602 Coq.ZArith.Zcomplements <> Zlength_correct thm
R6588:6602 Coq.ZArith.Zcomplements <> Zlength_correct thm
R6588:6602 Coq.ZArith.Zcomplements <> Zlength_correct thm
R6588:6602 Coq.ZArith.Zcomplements <> Zlength_correct thm
R6625:6645 sha_padding_lemmas <> total_pad_len_intlist thm
R6625:6645 sha_padding_lemmas <> total_pad_len_intlist thm
R6625:6645 sha_padding_lemmas <> total_pad_len_intlist thm
R6625:6645 sha_padding_lemmas <> total_pad_len_intlist thm
def 6835:6855 <> generate_and_pad_copy
R6876:6882 Coq.ZArith.Zcomplements <> Zlength def
R6884:6886 sha_padding_lemmas <> msg var
R6990:7004 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6894:6909 SHA256 <> Zlist_to_intlist def
R6915:6918 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6912:6914 sha_padding_lemmas <> msg var
R6926:6946 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R6919:6919 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R6925:6925 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R6947:6957 Coqlib <> list_repeat def
R6960:6967 Coq.ZArith.BinInt Z to_nat def
R6978:6982 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R6970:6971 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R6977:6977 Coq.ZArith.BinInt <> :Z_scope:'-'_x not
R6973:6975 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R6972:6972 sha_padding_lemmas <> n var
R7005:7005 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R7036:7037 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R7054:7054 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R7038:7045 Integers Int repr def
R7049:7051 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R7048:7048 sha_padding_lemmas <> n var
R7006:7013 Integers Int repr def
R7021:7023 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R7017:7019 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R7016:7016 sha_padding_lemmas <> n var
R7024:7034 Integers Int modulus def
