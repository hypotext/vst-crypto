DIGEST 905c816af5e84da33f9f6396c2d74023
FHMAC_functional_prog_Z
R15:22 Integers <> <> lib
R40:45 Coqlib <> <> lib
R63:80 Coq.Strings.String <> <> lib
R98:114 Coq.Strings.Ascii <> <> lib
R132:135 Coq.Lists.List <> <> lib
modtype 295:307 <> HASH_FUNCTION
ax 322:330 HASH_FUNCTION BlockSize
R332:334 Coq.Init.Datatypes <> nat ind
ax 385:396 HASH_FUNCTION DigestLength
R399:401 Coq.Init.Datatypes <> nat ind
ax 452:455 HASH_FUNCTION Hash
R469:472 Coq.Init.Datatypes <> list ind
R474:474 Coq.Numbers.BinNums <> Z ind
R459:462 Coq.Init.Datatypes <> list ind
R464:464 Coq.Numbers.BinNums <> Z ind
R481:493 HMAC_functional_prog_Z <> <> modtype
modtype 510:520 <> HMAC_Module
ax 535:538 HMAC_Module HMAC
R571:574 Coq.Init.Datatypes <> list ind
R576:576 Coq.Numbers.BinNums <> Z ind
R561:564 Coq.Init.Datatypes <> list ind
R566:566 Coq.Numbers.BinNums <> Z ind
R551:554 Coq.Init.Datatypes <> list ind
R556:556 Coq.Numbers.BinNums <> Z ind
R546:546 Coq.Numbers.BinNums <> Z ind
R541:541 Coq.Numbers.BinNums <> Z ind
R583:593 HMAC_functional_prog_Z <> <> modtype
R617:629 HMAC_functional_prog_Z <> <> mod
R636:646 HMAC_functional_prog_Z <> <> mod
mod 604:611 <> HMAC_FUN
def 661:669 HMAC_FUN sixtyfour
R678:678 HMAC_functional_prog_Z <> A var
R682:685 Coq.Init.Datatypes <> list ind
R687:687 HMAC_functional_prog_Z <> A var
R691:701 Coqlib <> list_repeat def
R716:716 HMAC_functional_prog_Z <> i var
R703:714 HMAC_functional_prog_Z HF BlockSize defax
def 793:799 HMAC_FUN zeroPad
R805:808 Coq.Init.Datatypes <> list ind
R810:810 Coq.Numbers.BinNums <> Z ind
R815:818 Coq.Init.Datatypes <> list ind
R820:820 Coq.Numbers.BinNums <> Z ind
R828:831 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R827:827 HMAC_functional_prog_Z <> k var
R832:842 Coqlib <> list_repeat def
R868:869 Coq.Numbers.BinNums <> Z0 constr
R857:857 Coq.Init.Peano <> :nat_scope:x_'-'_x not
R845:856 HMAC_functional_prog_Z HF BlockSize defax
R858:863 Coq.Lists.List <> length syndef
R865:865 HMAC_functional_prog_Z <> k var
def 884:888 HMAC_FUN mkKey
R893:896 Coq.Init.Datatypes <> list ind
R898:898 Coq.Numbers.BinNums <> Z ind
R903:906 Coq.Init.Datatypes <> list ind
R908:908 Coq.Numbers.BinNums <> Z ind
R918:922 Coq.ZArith.BinInt Z gtb def
R937:944 Coq.ZArith.BinInt Z of_nat def
R946:957 HMAC_functional_prog_Z HF BlockSize defax
R925:931 Coq.ZArith.Zcomplements <> Zlength def
R933:933 HMAC_functional_prog_Z <> l var
R997:1003 HMAC_functional_prog_Z HMAC_FUN zeroPad def
R1005:1005 HMAC_functional_prog_Z <> l var
R968:974 HMAC_functional_prog_Z HMAC_FUN zeroPad def
R977:983 HMAC_functional_prog_Z HF Hash defax
R985:985 HMAC_functional_prog_Z <> l var
def 1355:1359 HMAC_FUN mkArg
R1366:1369 Coq.Init.Datatypes <> list ind
R1371:1371 Coq.Numbers.BinNums <> Z ind
R1379:1379 Coq.Numbers.BinNums <> Z ind
R1383:1386 Coq.Init.Datatypes <> list ind
R1388:1388 Coq.Numbers.BinNums <> Z ind
R1402:1404 Coq.Lists.List <> map def
R1451:1457 Coq.Lists.List <> combine def
R1464:1472 HMAC_functional_prog_Z HMAC_FUN sixtyfour def
R1474:1476 HMAC_functional_prog_Z <> pad var
R1459:1461 HMAC_functional_prog_Z <> key var
R1416:1421 Coq.ZArith.BinInt Z lxor def
R1432:1434 Coq.Init.Datatypes <> snd def
R1436:1436 HMAC_functional_prog_Z <> p var
R1424:1426 Coq.Init.Datatypes <> fst def
R1428:1428 HMAC_functional_prog_Z <> p var
def 1629:1636 HMAC_FUN innerArg
R1648:1651 Coq.Init.Datatypes <> list ind
R1653:1653 Coq.Numbers.BinNums <> Z ind
R1662:1665 Coq.Init.Datatypes <> list ind
R1667:1667 Coq.Numbers.BinNums <> Z ind
R1674:1674 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R1687:1691 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R1675:1679 HMAC_functional_prog_Z HMAC_FUN mkArg def
R1685:1686 HMAC_functional_prog_Z <> IP var
R1681:1683 HMAC_functional_prog_Z <> key var
R1692:1695 HMAC_functional_prog_Z <> text var
def 1710:1714 HMAC_FUN INNER
R1729:1735 HMAC_functional_prog_Z HF Hash defax
R1738:1745 HMAC_functional_prog_Z HMAC_FUN innerArg def
R1755:1755 HMAC_functional_prog_Z <> k var
R1750:1753 HMAC_functional_prog_Z <> text var
R1747:1748 HMAC_functional_prog_Z <> IP var
def 1771:1778 HMAC_FUN outerArg
R1794:1797 Coq.Init.Datatypes <> list ind
R1799:1799 Coq.Numbers.BinNums <> Z ind
R1807:1810 Coq.Init.Datatypes <> list ind
R1812:1812 Coq.Numbers.BinNums <> Z ind
R1819:1819 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R1832:1836 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R1820:1824 HMAC_functional_prog_Z HMAC_FUN mkArg def
R1830:1831 HMAC_functional_prog_Z <> OP var
R1826:1828 HMAC_functional_prog_Z <> key var
R1837:1844 HMAC_functional_prog_Z <> innerRes var
def 1859:1863 HMAC_FUN OUTER
R1882:1888 HMAC_functional_prog_Z HF Hash defax
R1891:1898 HMAC_functional_prog_Z HMAC_FUN outerArg def
R1912:1912 HMAC_functional_prog_Z <> k var
R1903:1910 HMAC_functional_prog_Z <> innerRes var
R1900:1901 HMAC_functional_prog_Z <> OP var
def 1928:1931 HMAC_FUN HMAC
R1953:1956 Coq.Init.Datatypes <> list ind
R1958:1958 Coq.Numbers.BinNums <> Z ind
R2030:2034 HMAC_functional_prog_Z HMAC_FUN mkKey def
R2036:2043 HMAC_functional_prog_Z <> password var
R2050:2054 HMAC_functional_prog_Z HMAC_FUN OUTER def
R2064:2068 HMAC_functional_prog_Z HMAC_FUN INNER def
R2077:2079 HMAC_functional_prog_Z <> txt var
R2073:2075 HMAC_functional_prog_Z <> key var
R2070:2071 HMAC_functional_prog_Z <> IP var
R2059:2061 HMAC_functional_prog_Z <> key var
R2056:2057 HMAC_functional_prog_Z <> OP var
R2088:2095 HMAC_functional_prog_Z <> <> mod
R2114:2119 SHA256 <> <> lib
R2137:2151 functional_prog <> <> lib
R2173:2185 HMAC_functional_prog_Z <> <> mod
mod 2162:2168 <> SHA256_
def 2201:2209 SHA256_ BlockSize
def 2234:2245 SHA256_ DigestLength
def 2270:2273 SHA256_ Hash
R2287:2290 Coq.Init.Datatypes <> list ind
R2292:2292 Coq.Numbers.BinNums <> Z ind
R2277:2280 Coq.Init.Datatypes <> list ind
R2282:2282 Coq.Numbers.BinNums <> Z ind
R2297:2304 functional_prog <> SHA_256' def
R2311:2317 HMAC_functional_prog_Z <> <> mod
R2343:2350 HMAC_functional_prog_Z <> <> modtype
R2352:2358 HMAC_functional_prog_Z <> <> modtype
mod 2328:2338 <> HMAC_SHA256
def 2373:2376 <> Ipad
def 2422:2425 <> Opad
def 2471:2477 <> HMAC256
R2482:2497 HMAC_functional_prog_Z HMAC_SHA256 HMAC def
R2504:2507 HMAC_functional_prog_Z <> Opad def
R2499:2502 HMAC_functional_prog_Z <> Ipad def
def 2522:2531 <> HMACString
R2545:2550 Coq.Strings.String <> string ind
R2554:2557 Coq.Init.Datatypes <> list ind
R2559:2559 Coq.Numbers.BinNums <> Z ind
R2566:2572 HMAC_functional_prog_Z <> HMAC256 def
R2590:2597 SHA256 <> str_to_Z def
R2599:2604 HMAC_functional_prog_Z <> passwd var
R2575:2582 SHA256 <> str_to_Z def
R2584:2586 HMAC_functional_prog_Z <> txt var
def 2620:2626 <> HMACHex
R2643:2648 Coq.Strings.String <> string ind
R2652:2655 Coq.Init.Datatypes <> list ind
R2657:2657 Coq.Numbers.BinNums <> Z ind
R2665:2671 HMAC_functional_prog_Z <> HMAC256 def
R2700:2717 functional_prog <> hexstring_to_Zlist def
R2719:2726 HMAC_functional_prog_Z <> password var
R2674:2691 functional_prog <> hexstring_to_Zlist def
R2693:2696 HMAC_functional_prog_Z <> text var
def 2742:2746 <> check
R2838:2840 Coq.Init.Logic <> :type_scope:x_'='_x not
R2775:2782 functional_prog <> listZ_eq def
R2812:2829 functional_prog <> hexstring_to_Zlist def
R2831:2836 HMAC_functional_prog_Z <> digest var
R2785:2794 HMAC_functional_prog_Z <> HMACString def
R2801:2808 HMAC_functional_prog_Z <> password var
R2796:2799 HMAC_functional_prog_Z <> text var
R2841:2844 Coq.Init.Datatypes <> true constr
R2960:2964 HMAC_functional_prog_Z <> check def
prf 3088:3104 <> RFC4231_exaple4_2
R3110:3114 HMAC_functional_prog_Z <> check def
def 3271:3278 <> checkHex
R3367:3369 Coq.Init.Logic <> :type_scope:x_'='_x not
R3307:3314 functional_prog <> listZ_eq def
R3341:3358 functional_prog <> hexstring_to_Zlist def
R3360:3365 HMAC_functional_prog_Z <> digest var
R3317:3323 HMAC_functional_prog_Z <> HMACHex def
R3330:3337 HMAC_functional_prog_Z <> password var
R3325:3328 HMAC_functional_prog_Z <> text var
R3370:3373 Coq.Init.Datatypes <> true constr
prf 3383:3403 <> RFC6868_example4_2hex
R3409:3416 HMAC_functional_prog_Z <> checkHex def
prf 3616:3636 <> RFC6868_example4_5hex
R3642:3649 HMAC_functional_prog_Z <> checkHex def
prf 4146:4169 <> RFC6868_exampleAUTH256_2
R4175:4182 HMAC_functional_prog_Z <> checkHex def
