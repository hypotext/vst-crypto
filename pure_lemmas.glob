DIGEST 39d26955e29759bc1afa4cf3080d813e
Fpure_lemmas
R198:203 Coq.funind.Recdef <> <> lib
R221:228 Integers <> <> lib
R239:256 Coq.Strings.String <> <> lib
R267:283 Coq.Strings.Ascii <> <> lib
R364:369 Coqlib <> <> lib
R492:495 Coq.Lists.List <> <> lib
R611:616 SHA256 <> <> lib
R688:694 Coqlib2 <> <> lib
R747:759 common_lemmas <> <> lib
R785:789 Coq.micromega.Psatz <> <> lib
R807:813 SHA256 <> CBLOCKz def
R815:821 SHA256 <> LBLOCKz def
prf 831:844 <> Zlength_length
R863:866 Coq.Init.Datatypes <> list ind
R868:868 pure_lemmas <> A var
R875:875 Coq.Numbers.BinNums <> Z ind
R912:916 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R908:910 Coq.Init.Logic <> :type_scope:x_'='_x not
R898:904 Coq.ZArith.Zcomplements <> Zlength def
R906:907 pure_lemmas <> al var
R911:911 pure_lemmas <> n var
R926:928 Coq.Init.Logic <> :type_scope:x_'='_x not
R917:922 Coq.Init.Datatypes <> length def
R924:925 pure_lemmas <> al var
R929:936 Coq.ZArith.BinInt Z to_nat def
R938:938 pure_lemmas <> n var
R884:887 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R888:888 pure_lemmas <> n var
R965:979 Coq.ZArith.Zcomplements <> Zlength_correct thm
R965:979 Coq.ZArith.Zcomplements <> Zlength_correct thm
R1008:1015 Coq.ZArith.Znat Z2Nat id thm
R1008:1015 Coq.ZArith.Znat Z2Nat id thm
R1042:1050 Coq.ZArith.Znat Nat2Z inj thm
R1042:1050 Coq.ZArith.Znat Nat2Z inj thm
R1083:1091 Coq.ZArith.Znat Z2Nat inj thm
R1083:1091 Coq.ZArith.Znat Z2Nat inj thm
R1113:1120 Coq.ZArith.Znat Nat2Z id thm
R1113:1120 Coq.ZArith.Znat Nat2Z id thm
prf 1141:1157 <> int_min_signed_eq
R1174:1176 Coq.Init.Logic <> :type_scope:x_'='_x not
R1160:1173 Integers Int min_signed def
prf 1222:1238 <> int_max_signed_eq
R1255:1257 Coq.Init.Logic <> :type_scope:x_'='_x not
R1241:1254 Integers Int max_signed def
prf 1302:1320 <> int_max_unsigned_eq
R1339:1341 Coq.Init.Logic <> :type_scope:x_'='_x not
R1323:1338 Integers Int max_unsigned def
R1418:1434 pure_lemmas <> int_min_signed_eq thm
R1452:1468 pure_lemmas <> int_max_signed_eq thm
R1486:1504 pure_lemmas <> int_max_unsigned_eq thm
R1568:1578 Integers Int bits_or thm
R1616:1627 Integers Int bits_shl thm
R1665:1676 Integers Int bits_and thm
R1714:1726 Integers Int bits_shru thm
R1764:1780 Integers Int unsigned_repr thm
R1818:1833 Integers Int testbit_repr thm
R1871:1878 Coqlib2 <> if_false thm
R1916:1922 Coqlib2 <> if_true thm
R1960:1974 Coq.ZArith.BinInt Z ones_spec_low thm
R2012:2027 Coq.ZArith.BinInt Z ones_spec_high thm
R2065:2075 Coq.Bool.Bool <> orb_false_r thm
R2077:2086 Coq.Bool.Bool <> orb_true_r thm
R2088:2099 Coq.Bool.Bool <> andb_false_r thm
R2101:2111 Coq.Bool.Bool <> andb_true_r thm
R2137:2147 Coq.Bool.Bool <> orb_false_l thm
R2149:2158 Coq.Bool.Bool <> orb_true_l thm
R2160:2171 Coq.Bool.Bool <> andb_false_l thm
R2173:2183 Coq.Bool.Bool <> andb_true_l thm
R2209:2221 Coq.ZArith.BinInt Z add_simpl_r thm
R2247:2263 Integers Int unsigned_repr thm
prf 2304:2316 <> Ztest_Inttest
R2356:2358 Coq.Init.Logic <> :type_scope:x_'='_x not
R2330:2338 Coq.ZArith.BinInt Z testbit def
R2341:2352 Integers Int unsigned def
R2354:2354 pure_lemmas <> a var
R2359:2369 Integers Int testbit def
R2371:2371 pure_lemmas <> a var
R2412:2424 pure_lemmas <> Ztest_Inttest thm
def 2449:2452 <> swap
R2458:2460 Integers <> int syndef
R2465:2467 Integers <> int syndef
R2473:2478 Integers Int or def
R2535:2540 Integers Int or def
R2608:2613 Integers Int or def
R2684:2686 SHA256 <> Shr def
R2691:2691 pure_lemmas <> i var
R2616:2622 Integers Int shl def
R2661:2668 Integers Int repr def
R2625:2631 Integers Int and def
R2645:2652 Integers Int repr def
R2634:2636 SHA256 <> Shr def
R2641:2641 pure_lemmas <> i var
R2543:2549 Integers Int shl def
R2587:2594 Integers Int repr def
R2552:2558 Integers Int and def
R2571:2578 Integers Int repr def
R2561:2563 SHA256 <> Shr def
R2567:2567 pure_lemmas <> i var
R2481:2487 Integers Int shl def
R2517:2524 Integers Int repr def
R2490:2496 Integers Int and def
R2501:2508 Integers Int repr def
R2498:2498 pure_lemmas <> i var
prf 2704:2712 <> swap_swap
R2738:2740 Coq.Init.Logic <> :type_scope:x_'='_x not
R2725:2728 pure_lemmas <> swap def
R2731:2734 pure_lemmas <> swap def
R2736:2736 pure_lemmas <> w var
R2741:2741 pure_lemmas <> w var
R2758:2761 pure_lemmas <> swap def
R2764:2766 SHA256 <> Shr def
R2783:2798 Integers Int same_bits_eq thm
R2783:2798 Integers Int same_bits_eq thm
R2830:2830 Coq.Init.Logic <> :type_scope:x_'='_x not
R2817:2829 Integers Int zwordsize def
R2830:2830 Coq.Init.Logic <> :type_scope:x_'='_x not
R2817:2829 Integers Int zwordsize def
R2868:2873 Coq.ZArith.BinInt Z ones def
R2868:2873 Coq.ZArith.BinInt Z ones def
R2889:2891 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R2892:2907 Integers Int max_unsigned def
R2889:2891 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R2892:2907 Integers Int max_unsigned def
prf 3044:3062 <> map_swap_involutive
R3097:3100 Coq.Init.Logic <> :type_scope:x_'='_x not
R3076:3078 Coq.Lists.List <> map def
R3086:3088 Coq.Lists.List <> map def
R3095:3095 pure_lemmas <> l var
R3090:3093 pure_lemmas <> swap def
R3080:3083 pure_lemmas <> swap def
R3101:3101 pure_lemmas <> l var
R3128:3134 Coq.Lists.List <> map_map thm
R3128:3134 Coq.Lists.List <> map_map thm
R3157:3160 pure_lemmas <> swap def
R3163:3166 pure_lemmas <> swap def
R3168:3168 pure_lemmas <> x var
R3179:3190 Coq.Init.Datatypes <> id def
R3192:3194 Integers <> int syndef
R3179:3190 Coq.Init.Datatypes <> id def
R3192:3194 Integers <> int syndef
R3157:3160 pure_lemmas <> swap def
R3163:3166 pure_lemmas <> swap def
R3168:3168 pure_lemmas <> x var
R3205:3210 Coq.Lists.List <> map_id thm
R3205:3210 Coq.Lists.List <> map_id thm
R3247:3255 pure_lemmas <> swap_swap thm
R3247:3255 pure_lemmas <> swap_swap thm
prf 3270:3284 <> isbyteZ_testbit
R3340:3342 Coq.Init.Logic <> :type_scope:x_'='_x not
R3327:3335 Coq.ZArith.BinInt Z testbit def
R3339:3339 pure_lemmas <> j var
R3337:3337 pure_lemmas <> i var
R3343:3347 Coq.Init.Datatypes <> false constr
R3318:3321 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R3317:3317 pure_lemmas <> j var
R3302:3305 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R3307:3309 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R3306:3306 pure_lemmas <> i var
R3306:3306 pure_lemmas <> i var
R3374:3392 Integers Byte Ztestbit_above thm
R3374:3392 Integers Byte Ztestbit_above thm
prf 3429:3451 <> length_intlist_to_Zlist
R3493:3495 Coq.Init.Logic <> :type_scope:x_'='_x not
R3466:3471 Coq.Init.Datatypes <> length def
R3474:3489 SHA256 <> intlist_to_Zlist def
R3491:3491 pure_lemmas <> l var
R3498:3500 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R3501:3506 Coq.Init.Datatypes <> length def
R3508:3508 pure_lemmas <> l var
prf 3582:3605 <> Zlength_intlist_to_Zlist
R3648:3650 Coq.Init.Logic <> :type_scope:x_'='_x not
R3620:3626 Coq.ZArith.Zcomplements <> Zlength def
R3629:3644 SHA256 <> intlist_to_Zlist def
R3646:3646 pure_lemmas <> l var
R3655:3655 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R3651:3654 SHA256 <> WORD def
R3656:3662 Coq.ZArith.Zcomplements <> Zlength def
R3664:3664 pure_lemmas <> l var
R3697:3711 Coq.ZArith.Zcomplements <> Zlength_correct thm
R3697:3711 Coq.ZArith.Zcomplements <> Zlength_correct thm
R3697:3711 Coq.ZArith.Zcomplements <> Zlength_correct thm
R3697:3711 Coq.ZArith.Zcomplements <> Zlength_correct thm
R3722:3744 pure_lemmas <> length_intlist_to_Zlist thm
R3722:3744 pure_lemmas <> length_intlist_to_Zlist thm
R3755:3767 Coq.ZArith.Znat Nat2Z inj_mul thm
R3755:3767 Coq.ZArith.Znat Nat2Z inj_mul thm
prf 3795:3824 <> intlist_to_Zlist_Z_to_int_cons
R3951:3959 Coq.Init.Logic <> :type_scope:x_'='_x not
R3911:3926 SHA256 <> intlist_to_Zlist def
R3945:3948 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3929:3936 SHA256 <> Z_to_Int def
R3944:3944 pure_lemmas <> d var
R3942:3942 pure_lemmas <> c var
R3940:3940 pure_lemmas <> b var
R3938:3938 pure_lemmas <> a var
R3949:3949 pure_lemmas <> l var
R3961:3962 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3960:3960 pure_lemmas <> a var
R3964:3965 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3963:3963 pure_lemmas <> b var
R3967:3968 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3966:3966 pure_lemmas <> c var
R3970:3972 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3969:3969 pure_lemmas <> d var
R3973:3988 SHA256 <> intlist_to_Zlist def
R3990:3990 pure_lemmas <> l var
R3893:3899 SHA256 <> isbyteZ def
R3901:3901 pure_lemmas <> d var
R3880:3886 SHA256 <> isbyteZ def
R3888:3888 pure_lemmas <> c var
R3867:3873 SHA256 <> isbyteZ def
R3875:3875 pure_lemmas <> b var
R3854:3860 SHA256 <> isbyteZ def
R3862:3862 pure_lemmas <> a var
R4022:4028 SHA256 <> isbyteZ def
R4057:4057 Coq.Init.Logic <> :type_scope:x_'='_x not
R4044:4056 Integers Int zwordsize def
R4057:4057 Coq.Init.Logic <> :type_scope:x_'='_x not
R4044:4056 Integers Int zwordsize def
R4087:4094 SHA256 <> Z_to_Int def
R4097:4099 SHA256 <> Shr def
R4128:4133 Coq.ZArith.BinInt Z ones def
R4128:4133 Coq.ZArith.BinInt Z ones def
R4181:4184 Coq.Init.Logic <> :type_scope:x_'='_x not
R4181:4184 Coq.Init.Logic <> :type_scope:x_'='_x not
R4204:4215 Integers Int unsigned def
R4218:4225 Integers Int repr def
R4252:4268 Integers Int unsigned_repr thm
R4298:4313 Integers Int same_bits_eq thm
R4204:4215 Integers Int unsigned def
R4218:4225 Integers Int repr def
R4252:4268 Integers Int unsigned_repr thm
R4204:4215 Integers Int unsigned def
R4218:4225 Integers Int repr def
R4252:4268 Integers Int unsigned_repr thm
R4204:4215 Integers Int unsigned def
R4218:4225 Integers Int repr def
R4252:4268 Integers Int unsigned_repr thm
R4204:4215 Integers Int unsigned def
R4218:4225 Integers Int repr def
R4252:4268 Integers Int unsigned_repr thm
R4298:4313 Integers Int same_bits_eq thm
R4298:4313 Integers Int same_bits_eq thm
R4298:4313 Integers Int same_bits_eq thm
R4298:4313 Integers Int same_bits_eq thm
R4406:4420 pure_lemmas <> isbyteZ_testbit thm
R4406:4420 pure_lemmas <> isbyteZ_testbit thm
R4440:4454 pure_lemmas <> isbyteZ_testbit thm
R4440:4454 pure_lemmas <> isbyteZ_testbit thm
R4478:4492 pure_lemmas <> isbyteZ_testbit thm
R4478:4492 pure_lemmas <> isbyteZ_testbit thm
R4516:4530 pure_lemmas <> isbyteZ_testbit thm
R4516:4530 pure_lemmas <> isbyteZ_testbit thm
R4633:4647 pure_lemmas <> isbyteZ_testbit thm
R4633:4647 pure_lemmas <> isbyteZ_testbit thm
R4712:4726 pure_lemmas <> isbyteZ_testbit thm
R4712:4726 pure_lemmas <> isbyteZ_testbit thm
R4746:4760 pure_lemmas <> isbyteZ_testbit thm
R4746:4760 pure_lemmas <> isbyteZ_testbit thm
R4784:4798 pure_lemmas <> isbyteZ_testbit thm
R4784:4798 pure_lemmas <> isbyteZ_testbit thm
R4901:4915 pure_lemmas <> isbyteZ_testbit thm
R4901:4915 pure_lemmas <> isbyteZ_testbit thm
R4980:4994 pure_lemmas <> isbyteZ_testbit thm
R4980:4994 pure_lemmas <> isbyteZ_testbit thm
R5059:5073 pure_lemmas <> isbyteZ_testbit thm
R5059:5073 pure_lemmas <> isbyteZ_testbit thm
R5093:5107 pure_lemmas <> isbyteZ_testbit thm
R5093:5107 pure_lemmas <> isbyteZ_testbit thm
R5166:5168 Coqlib <> zlt def
R5223:5237 pure_lemmas <> isbyteZ_testbit thm
R5166:5168 Coqlib <> zlt def
R5223:5237 pure_lemmas <> isbyteZ_testbit thm
prf 5266:5290 <> Zlist_to_intlist_to_Zlist
R5306:5309 Coq.Init.Datatypes <> list ind
R5311:5311 Coq.Numbers.BinNums <> Z ind
R5425:5427 Coq.Init.Logic <> :type_scope:x_'='_x not
R5387:5402 SHA256 <> intlist_to_Zlist def
R5405:5420 SHA256 <> Zlist_to_intlist def
R5422:5423 pure_lemmas <> nl var
R5428:5429 pure_lemmas <> nl var
R5364:5369 Coq.Lists.List <> Forall ind
R5379:5380 pure_lemmas <> nl var
R5371:5377 SHA256 <> isbyteZ def
R5317:5329 Coq.Numbers.Natural.Peano.NPeano <> divide def
R5348:5353 Coq.Init.Datatypes <> length def
R5355:5356 pure_lemmas <> nl var
R5332:5339 Coq.ZArith.BinInt Z to_nat def
R5341:5344 SHA256 <> WORD def
R5627:5642 SHA256 <> Zlist_to_intlist def
R5650:5665 SHA256 <> Zlist_to_intlist def
R5650:5665 SHA256 <> Zlist_to_intlist def
R5676:5705 pure_lemmas <> intlist_to_Zlist_Z_to_int_cons thm
R5676:5705 pure_lemmas <> intlist_to_Zlist_Z_to_int_cons thm
prf 5750:5776 <> intlist_to_Zlist_to_intlist
R5792:5795 Coq.Init.Datatypes <> list ind
R5797:5799 Integers <> int syndef
R5843:5845 Coq.Init.Logic <> :type_scope:x_'='_x not
R5805:5820 SHA256 <> Zlist_to_intlist def
R5823:5838 SHA256 <> intlist_to_Zlist def
R5840:5841 pure_lemmas <> il var
R5846:5847 pure_lemmas <> il var
R5934:5934 Coq.Init.Logic <> :type_scope:x_'='_x not
R5921:5933 Integers Int zwordsize def
R5934:5934 Coq.Init.Logic <> :type_scope:x_'='_x not
R5921:5933 Integers Int zwordsize def
R5964:5971 SHA256 <> Z_to_Int def
R5974:5976 SHA256 <> Shr def
R6005:6010 Coq.ZArith.BinInt Z ones def
R6005:6010 Coq.ZArith.BinInt Z ones def
R6022:6037 Integers Int same_bits_eq thm
R6022:6037 Integers Int same_bits_eq thm
R6056:6072 Integers Int repr_unsigned thm
R6056:6072 Integers Int repr_unsigned thm
prf 6285:6307 <> length_Zlist_to_intlist
R6403:6405 Coq.Init.Logic <> :type_scope:x_'='_x not
R6376:6381 Coq.Init.Datatypes <> length def
R6384:6399 SHA256 <> Zlist_to_intlist def
R6401:6401 pure_lemmas <> l var
R6406:6406 pure_lemmas <> n var
R6338:6340 Coq.Init.Logic <> :type_scope:x_'='_x not
R6330:6335 Coq.Init.Datatypes <> length def
R6337:6337 pure_lemmas <> l var
R6355:6357 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R6342:6349 Coq.ZArith.BinInt Z to_nat def
R6351:6354 SHA256 <> WORD def
R6358:6358 pure_lemmas <> n var
R6478:6478 Coq.Init.Datatypes <> S constr
R6490:6492 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6490:6492 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6478:6478 Coq.Init.Datatypes <> S constr
R6523:6539 Coq.Arith.Mult <> mult_plus_distr_l thm
R6523:6539 Coq.Arith.Mult <> mult_plus_distr_l thm
R6735:6737 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R6722:6729 Coq.ZArith.BinInt Z to_nat def
R6731:6734 SHA256 <> WORD def
R6735:6737 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R6722:6729 Coq.ZArith.BinInt Z to_nat def
R6731:6734 SHA256 <> WORD def
prf 6776:6797 <> big_endian_integer_ext
R6885:6887 Coq.Init.Logic <> :type_scope:x_'='_x not
R6865:6882 SHA256 <> big_endian_integer def
R6884:6884 pure_lemmas <> f var
R6888:6905 SHA256 <> big_endian_integer def
R6907:6908 pure_lemmas <> f' var
R6849:6851 Coq.Init.Logic <> :type_scope:x_'='_x not
R6846:6846 pure_lemmas <> f var
R6848:6848 pure_lemmas <> z var
R6852:6853 pure_lemmas <> f' var
R6855:6855 pure_lemmas <> z var
R6827:6830 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R6832:6834 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R6831:6831 pure_lemmas <> z var
R6831:6831 pure_lemmas <> z var
R6835:6838 SHA256 <> WORD def
R6925:6942 SHA256 <> big_endian_integer def
def 7068:7073 <> LBLOCK
R7077:7079 Coq.Init.Datatypes <> nat ind
R7084:7091 Coq.ZArith.BinInt Z to_nat def
R7093:7099 SHA256 <> LBLOCKz def
def 7116:7121 <> CBLOCK
R7125:7127 Coq.Init.Datatypes <> nat ind
R7132:7139 Coq.ZArith.BinInt Z to_nat def
R7141:7147 SHA256 <> CBLOCKz def
R7157:7162 pure_lemmas <> LBLOCK def
R7164:7169 pure_lemmas <> CBLOCK def
prf 7179:7188 <> LBLOCK_zeq
R7206:7208 Coq.Init.Logic <> :type_scope:x_'='_x not
R7191:7198 Coq.ZArith.BinInt Z of_nat def
R7200:7205 pure_lemmas <> LBLOCK def
prf 7247:7256 <> CBLOCK_zeq
R7275:7277 Coq.Init.Logic <> :type_scope:x_'='_x not
R7260:7267 Coq.ZArith.BinInt Z of_nat def
R7269:7274 pure_lemmas <> CBLOCK def
prf 7317:7330 <> LBLOCKz_nonneg
R7335:7338 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R7339:7345 SHA256 <> LBLOCKz def
R7365:7371 SHA256 <> LBLOCKz def
R7365:7371 SHA256 <> LBLOCKz def
R7409:7422 pure_lemmas <> LBLOCKz_nonneg thm
prf 7432:7442 <> LBLOCKz_pos
R7447:7449 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R7450:7456 SHA256 <> LBLOCKz def
R7476:7482 SHA256 <> LBLOCKz def
R7476:7482 SHA256 <> LBLOCKz def
R7520:7530 pure_lemmas <> LBLOCKz_pos thm
prf 7540:7553 <> CBLOCKz_nonneg
R7558:7561 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R7562:7568 SHA256 <> CBLOCKz def
R7588:7594 SHA256 <> CBLOCKz def
R7588:7594 SHA256 <> CBLOCKz def
R7632:7645 pure_lemmas <> CBLOCKz_nonneg thm
prf 7655:7665 <> CBLOCKz_pos
R7670:7672 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R7673:7679 SHA256 <> CBLOCKz def
R7699:7705 SHA256 <> CBLOCKz def
R7699:7705 SHA256 <> CBLOCKz def
R7743:7753 pure_lemmas <> CBLOCKz_pos thm
prf 7763:7782 <> intlist_to_Zlist_app
R7825:7827 Coq.Init.Logic <> :type_scope:x_'='_x not
R7800:7815 SHA256 <> intlist_to_Zlist def
R7820:7821 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R7818:7819 pure_lemmas <> al var
R7822:7823 pure_lemmas <> bl var
R7847:7850 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R7828:7843 SHA256 <> intlist_to_Zlist def
R7845:7846 pure_lemmas <> al var
R7851:7866 SHA256 <> intlist_to_Zlist def
R7868:7869 pure_lemmas <> bl var
prf 7948:7957 <> firstn_app
R7981:7984 Coq.Init.Datatypes <> list ind
R7986:7986 pure_lemmas <> A var
R8026:8030 Coq.Init.Logic <> :type_scope:x_'='_x not
R8001:8004 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R7990:7995 Coq.Lists.List <> firstn def
R7999:8000 pure_lemmas <> al var
R7997:7997 pure_lemmas <> n var
R8005:8010 Coq.Lists.List <> firstn def
R8015:8019 Coq.Lists.List <> skipn def
R8023:8024 pure_lemmas <> al var
R8021:8021 pure_lemmas <> n var
R8012:8012 pure_lemmas <> m var
R8031:8036 Coq.Lists.List <> firstn def
R8044:8045 pure_lemmas <> al var
R8040:8040 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R8039:8039 pure_lemmas <> n var
R8041:8041 pure_lemmas <> m var
prf 8154:8162 <> nth_skipn
R8188:8188 pure_lemmas <> A var
R8221:8223 Coq.Init.Logic <> :type_scope:x_'='_x not
R8199:8201 Coq.Lists.List <> nth def
R8220:8220 pure_lemmas <> d var
R8206:8210 Coq.Lists.List <> skipn def
R8214:8217 pure_lemmas <> data var
R8212:8212 pure_lemmas <> n var
R8203:8203 pure_lemmas <> i var
R8224:8226 Coq.Lists.List <> nth def
R8239:8239 pure_lemmas <> d var
R8234:8237 pure_lemmas <> data var
R8230:8230 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R8229:8229 pure_lemmas <> i var
R8231:8231 pure_lemmas <> n var
R8385:8387 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R8388:8388 Coq.Init.Datatypes <> S constr
R8399:8399 Coq.Init.Datatypes <> S constr
R8403:8405 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R8399:8399 Coq.Init.Datatypes <> S constr
R8403:8405 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R8385:8387 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R8388:8388 Coq.Init.Datatypes <> S constr
prf 8438:8447 <> Forall_app
R8472:8475 Coq.Init.Datatypes <> list ind
R8477:8477 pure_lemmas <> A var
R8500:8504 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R8481:8486 Coq.Lists.List <> Forall ind
R8493:8496 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R8491:8492 pure_lemmas <> l1 var
R8497:8498 pure_lemmas <> l2 var
R8488:8488 pure_lemmas <> P var
R8516:8519 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8505:8510 Coq.Lists.List <> Forall ind
R8514:8515 pure_lemmas <> l1 var
R8512:8512 pure_lemmas <> P var
R8520:8525 Coq.Lists.List <> Forall ind
R8529:8530 pure_lemmas <> l2 var
R8527:8527 pure_lemmas <> P var
R0:-1 pure_lemmas <> y var
R0:-1 pure_lemmas <> y var
R0:-1 pure_lemmas <> y var
R0:-1 pure_lemmas <> y var
prf 8867:8879 <> firstn_firstn
R8905:8908 Coq.Init.Datatypes <> list ind
R8910:8910 pure_lemmas <> A var
R8946:8948 Coq.Init.Logic <> :type_scope:x_'='_x not
R8914:8919 Coq.Lists.List <> firstn def
R8925:8930 Coq.Lists.List <> firstn def
R8941:8944 pure_lemmas <> data var
R8935:8937 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R8933:8934 pure_lemmas <> lo var
R8938:8938 pure_lemmas <> n var
R8921:8922 pure_lemmas <> lo var
R8949:8954 Coq.Lists.List <> firstn def
R8959:8962 pure_lemmas <> data var
R8956:8957 pure_lemmas <> lo var
prf 9126:9137 <> skipn_firstn
R9163:9166 Coq.Init.Datatypes <> list ind
R9168:9168 pure_lemmas <> A var
R9203:9205 Coq.Init.Logic <> :type_scope:x_'='_x not
R9172:9176 Coq.Lists.List <> skipn def
R9182:9187 Coq.Lists.List <> firstn def
R9198:9201 pure_lemmas <> data var
R9192:9194 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R9190:9191 pure_lemmas <> lo var
R9195:9195 pure_lemmas <> n var
R9178:9179 pure_lemmas <> lo var
R9206:9211 Coq.Lists.List <> firstn def
R9216:9220 Coq.Lists.List <> skipn def
R9225:9228 pure_lemmas <> data var
R9222:9223 pure_lemmas <> lo var
R9213:9213 pure_lemmas <> n var
prf 9390:9400 <> Zlength_app
R9420:9423 Coq.Init.Datatypes <> list ind
R9425:9425 pure_lemmas <> T var
R9449:9451 Coq.Init.Logic <> :type_scope:x_'='_x not
R9433:9439 Coq.ZArith.Zcomplements <> Zlength def
R9444:9445 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R9442:9443 pure_lemmas <> al var
R9446:9447 pure_lemmas <> bl var
R9463:9465 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R9453:9459 Coq.ZArith.Zcomplements <> Zlength def
R9461:9462 pure_lemmas <> al var
R9466:9472 Coq.ZArith.Zcomplements <> Zlength def
R9474:9475 pure_lemmas <> bl var
R9516:9518 Coq.Init.Datatypes <> app def
R9529:9539 Coq.ZArith.Zcomplements <> Zlength_nil thm
R9516:9518 Coq.Init.Datatypes <> app def
R9529:9539 Coq.ZArith.Zcomplements <> Zlength_nil thm
R9556:9558 Coq.Init.Datatypes <> app def
R9576:9587 Coq.ZArith.Zcomplements <> Zlength_cons thm
R9556:9558 Coq.Init.Datatypes <> app def
R9576:9587 Coq.ZArith.Zcomplements <> Zlength_cons thm
R9576:9587 Coq.ZArith.Zcomplements <> Zlength_cons thm
R9576:9587 Coq.ZArith.Zcomplements <> Zlength_cons thm
prf 9622:9632 <> Zlength_rev
R9649:9652 Coq.Init.Datatypes <> list ind
R9654:9654 pure_lemmas <> T var
R9674:9676 Coq.Init.Logic <> :type_scope:x_'='_x not
R9658:9664 Coq.ZArith.Zcomplements <> Zlength def
R9667:9669 Coq.Lists.List <> rev def
R9671:9672 pure_lemmas <> vl var
R9677:9683 Coq.ZArith.Zcomplements <> Zlength def
R9685:9686 pure_lemmas <> vl var
R9731:9742 Coq.ZArith.Zcomplements <> Zlength_cons thm
R9731:9742 Coq.ZArith.Zcomplements <> Zlength_cons thm
R9770:9780 pure_lemmas <> Zlength_app thm
R9770:9780 pure_lemmas <> Zlength_app thm
R9791:9802 Coq.ZArith.Zcomplements <> Zlength_cons thm
R9791:9802 Coq.ZArith.Zcomplements <> Zlength_cons thm
R9813:9823 Coq.ZArith.Zcomplements <> Zlength_nil thm
R9813:9823 Coq.ZArith.Zcomplements <> Zlength_nil thm
prf 9845:9855 <> Zlength_map
R9878:9878 pure_lemmas <> B var
R9873:9873 pure_lemmas <> A var
R9901:9903 Coq.Init.Logic <> :type_scope:x_'='_x not
R9884:9890 Coq.ZArith.Zcomplements <> Zlength def
R9893:9895 Coq.Lists.List <> map def
R9899:9899 pure_lemmas <> l var
R9897:9897 pure_lemmas <> f var
R9904:9910 Coq.ZArith.Zcomplements <> Zlength def
R9912:9912 pure_lemmas <> l var
R9963:9974 Coq.ZArith.Zcomplements <> Zlength_cons thm
R9963:9974 Coq.ZArith.Zcomplements <> Zlength_cons thm
R9963:9974 Coq.ZArith.Zcomplements <> Zlength_cons thm
R9963:9974 Coq.ZArith.Zcomplements <> Zlength_cons thm
prf 10025:10041 <> divide_length_app
R10066:10069 Coq.Init.Datatypes <> list ind
R10071:10071 pure_lemmas <> A var
R10135:10135 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R10137:10139 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R10156:10156 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R10136:10136 pure_lemmas <> n var
R10140:10146 Coq.ZArith.Zcomplements <> Zlength def
R10151:10152 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R10149:10150 pure_lemmas <> al var
R10153:10154 pure_lemmas <> bl var
R10109:10109 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R10111:10113 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R10124:10124 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R10110:10110 pure_lemmas <> n var
R10114:10120 Coq.ZArith.Zcomplements <> Zlength def
R10122:10123 pure_lemmas <> bl var
R10082:10082 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R10084:10086 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R10097:10097 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R10083:10083 pure_lemmas <> n var
R10087:10093 Coq.ZArith.Zcomplements <> Zlength def
R10095:10096 pure_lemmas <> al var
R10199:10199 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R10199:10199 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R10216:10226 pure_lemmas <> Zlength_app thm
R10245:10261 Coq.ZArith.BinInt Z mul_add_distr_r thm
R10216:10226 pure_lemmas <> Zlength_app thm
R10245:10261 Coq.ZArith.BinInt Z mul_add_distr_r thm
prf 10283:10305 <> isbyte_intlist_to_Zlist
R10319:10324 Coq.Lists.List <> Forall ind
R10335:10350 SHA256 <> intlist_to_Zlist def
R10352:10352 pure_lemmas <> l var
R10326:10332 SHA256 <> isbyteZ def
R10461:10463 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R10422:10433 Integers Int unsigned def
R10436:10442 Integers Int and def
R10447:10454 Integers Int repr def
R10444:10444 pure_lemmas <> i var
R10461:10463 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R10422:10433 Integers Int unsigned def
R10436:10442 Integers Int and def
R10447:10454 Integers Int repr def
R10444:10444 pure_lemmas <> i var
R10491:10503 Coq.ZArith.BinInt Z lt_le_trans thm
R10491:10503 Coq.ZArith.BinInt Z lt_le_trans thm
R10513:10528 Integers Int and_interval thm
R10533:10540 Integers Int repr def
R10543:10548 Coq.ZArith.BinInt Z ones def
R10513:10528 Integers Int and_interval thm
R10533:10540 Integers Int repr def
R10543:10548 Coq.ZArith.BinInt Z ones def
R10564:10571 Integers Int size def
R10575:10582 Integers Int repr def
R10585:10590 Coq.ZArith.BinInt Z ones def
R10564:10571 Integers Int size def
R10575:10582 Integers Int repr def
R10585:10590 Coq.ZArith.BinInt Z ones def
R10613:10621 Coqlib <> Zmin_spec thm
R10613:10621 Coqlib <> Zmin_spec thm
R10656:10660 Coq.ZArith.Zpower <> two_p def
R10639:10648 Coq.ZArith.BinInt Z le_trans thm
R10656:10660 Coq.ZArith.Zpower <> two_p def
R10639:10648 Coq.ZArith.BinInt Z le_trans thm
R10672:10685 Coqlib <> two_p_monotone thm
R10672:10685 Coqlib <> two_p_monotone thm
R10714:10727 Integers Int size_range thm
R10714:10727 Integers Int size_range thm
R10779:10781 SHA256 <> Shr def
R10784:10790 SHA256 <> isbyteZ def
R10823:10840 Integers Int unsigned_range thm
R10823:10840 Integers Int unsigned_range thm
R10823:10840 Integers Int unsigned_range thm
R10823:10840 Integers Int unsigned_range thm
R10823:10840 Integers Int unsigned_range thm
R10823:10840 Integers Int unsigned_range thm
R10823:10840 Integers Int unsigned_range thm
R10823:10840 Integers Int unsigned_range thm
R10823:10840 Integers Int unsigned_range thm
R10823:10840 Integers Int unsigned_range thm
R10872:10884 Integers Int divu_pow2 thm
R10923:10929 Coq.Init.Logic <> eq_refl constr
R10909:10916 Integers Int repr def
R10889:10896 Integers Int repr def
R10900:10902 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R10872:10884 Integers Int divu_pow2 thm
R10923:10929 Coq.Init.Logic <> eq_refl constr
R10909:10916 Integers Int repr def
R10889:10896 Integers Int repr def
R10900:10902 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R10943:10950 Integers Int divu def
R10961:10977 Integers Int unsigned_repr thm
R10961:10977 Integers Int unsigned_repr thm
R10988:11004 Integers Int unsigned_repr thm
R10988:11004 Integers Int unsigned_repr thm
R11045:11064 Coq.ZArith.BinInt Z div_lt_upper_bound thm
R11045:11064 Coq.ZArith.BinInt Z div_lt_upper_bound thm
R11118:11128 Integers Int modulus def
R11102:11104 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R11097:11099 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R11102:11104 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R11097:11099 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R11118:11128 Integers Int modulus def
R11138:11155 Integers Int unsigned_range thm
R11138:11155 Integers Int unsigned_range thm
R11167:11169 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R11171:11173 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R11189:11204 Coq.ZArith.BinInt Z pow_pos_nonneg thm
R11167:11169 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R11171:11173 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R11189:11204 Coq.ZArith.BinInt Z pow_pos_nonneg thm
R11230:11246 Integers Int unsigned_repr thm
R11230:11246 Integers Int unsigned_repr thm
R11294:11302 Coq.ZArith.BinInt Z div_pos thm
R11294:11302 Coq.ZArith.BinInt Z div_pos thm
R11317:11334 Integers Int unsigned_range thm
R11317:11334 Integers Int unsigned_range thm
R11343:11362 Coq.ZArith.BinInt Z div_le_upper_bound thm
R11343:11362 Coq.ZArith.BinInt Z div_le_upper_bound thm
R11405:11405 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R11394:11404 Integers Int modulus def
R11377:11386 Coq.ZArith.BinInt Z le_trans thm
R11405:11405 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R11394:11404 Integers Int modulus def
R11377:11386 Coq.ZArith.BinInt Z le_trans thm
R11420:11437 Integers Int unsigned_range thm
R11420:11437 Integers Int unsigned_range thm
prf 11483:11506 <> isbyte_intlist_to_Zlist'
R11523:11528 Coq.Lists.List <> Forall ind
R11539:11541 Coq.Lists.List <> map def
R11557:11559 Coq.Lists.List <> map def
R11571:11586 SHA256 <> intlist_to_Zlist def
R11588:11588 pure_lemmas <> l var
R11561:11568 Integers Int repr def
R11543:11554 Integers Int unsigned def
R11530:11536 SHA256 <> isbyteZ def
R11617:11619 Coq.Lists.List <> map def
R11635:11637 Coq.Lists.List <> map def
R11649:11664 SHA256 <> intlist_to_Zlist def
R11639:11646 Integers Int repr def
R11621:11632 Integers Int unsigned def
R11677:11692 SHA256 <> intlist_to_Zlist def
R11677:11692 SHA256 <> intlist_to_Zlist def
R11617:11619 Coq.Lists.List <> map def
R11635:11637 Coq.Lists.List <> map def
R11649:11664 SHA256 <> intlist_to_Zlist def
R11639:11646 Integers Int repr def
R11621:11632 Integers Int unsigned def
R11704:11726 pure_lemmas <> isbyte_intlist_to_Zlist thm
R11704:11726 pure_lemmas <> isbyte_intlist_to_Zlist thm
R11793:11809 Integers Int repr_unsigned thm
R11793:11809 Integers Int repr_unsigned thm
R11793:11809 Integers Int repr_unsigned thm
R11793:11809 Integers Int repr_unsigned thm
R11793:11809 Integers Int repr_unsigned thm
prf 11824:11850 <> Forall_isbyte_repr_unsigned
R11864:11867 Coq.Init.Datatypes <> list ind
R11869:11871 Integers <> int syndef
R11907:11909 Coq.Init.Logic <> :type_scope:x_'='_x not
R11874:11876 Coq.Lists.List <> map def
R11888:11890 Coq.Lists.List <> map def
R11905:11905 pure_lemmas <> l var
R11892:11903 Integers Int unsigned def
R11878:11885 Integers Int repr def
R11910:11910 pure_lemmas <> l var
R11982:11998 Integers Int repr_unsigned thm
R11982:11998 Integers Int repr_unsigned thm
prf 12013:12036 <> map_unsigned_repr_isbyte
R12052:12055 Coq.Init.Datatypes <> list ind
R12057:12057 Coq.Numbers.BinNums <> Z ind
R12114:12116 Coq.Init.Logic <> :type_scope:x_'='_x not
R12081:12083 Coq.Lists.List <> map def
R12099:12101 Coq.Lists.List <> map def
R12112:12112 pure_lemmas <> l var
R12103:12110 Integers Int repr def
R12085:12096 Integers Int unsigned def
R12117:12117 pure_lemmas <> l var
R12061:12066 Coq.Lists.List <> Forall ind
R12076:12076 pure_lemmas <> l var
R12068:12074 SHA256 <> isbyteZ def
R12192:12198 SHA256 <> isbyteZ def
R12213:12229 Integers Int unsigned_repr thm
R12213:12229 Integers Int unsigned_repr thm
R12258:12260 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R12242:12257 Integers Int max_unsigned def
R12258:12260 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R12242:12257 Integers Int max_unsigned def
prf 12314:12329 <> int_unsigned_inj
R12380:12380 Coq.Init.Logic <> :type_scope:x_'='_x not
R12379:12379 pure_lemmas <> a var
R12381:12381 pure_lemmas <> b var
R12358:12360 Coq.Init.Logic <> :type_scope:x_'='_x not
R12344:12355 Integers Int unsigned def
R12357:12357 pure_lemmas <> a var
R12361:12372 Integers Int unsigned def
R12374:12374 pure_lemmas <> b var
R12411:12427 Integers Int repr_unsigned thm
R12445:12461 Integers Int repr_unsigned thm
R12411:12427 Integers Int repr_unsigned thm
R12445:12461 Integers Int repr_unsigned thm
prf 12491:12510 <> intlist_to_Zlist_inj
R12574:12574 Coq.Init.Logic <> :type_scope:x_'='_x not
R12572:12573 pure_lemmas <> al var
R12575:12576 pure_lemmas <> bl var
R12546:12548 Coq.Init.Logic <> :type_scope:x_'='_x not
R12527:12542 SHA256 <> intlist_to_Zlist def
R12544:12545 pure_lemmas <> al var
R12549:12564 SHA256 <> intlist_to_Zlist def
R12566:12567 pure_lemmas <> bl var
R12733:12748 pure_lemmas <> int_unsigned_inj thm
R12733:12748 pure_lemmas <> int_unsigned_inj thm
R12763:12778 pure_lemmas <> int_unsigned_inj thm
R12763:12778 pure_lemmas <> int_unsigned_inj thm
R12793:12808 pure_lemmas <> int_unsigned_inj thm
R12793:12808 pure_lemmas <> int_unsigned_inj thm
R12823:12838 pure_lemmas <> int_unsigned_inj thm
R12823:12838 pure_lemmas <> int_unsigned_inj thm
R12854:12856 SHA256 <> Shr def
R12870:12885 Integers Int same_bits_eq thm
R12870:12885 Integers Int same_bits_eq thm
R12917:12917 Coq.Init.Logic <> :type_scope:x_'='_x not
R12904:12916 Integers Int zwordsize def
R12917:12917 Coq.Init.Logic <> :type_scope:x_'='_x not
R12904:12916 Integers Int zwordsize def
R12959:12964 Coq.ZArith.BinInt Z ones def
R12959:12964 Coq.ZArith.BinInt Z ones def
R12985:12987 Coqlib <> zlt def
R12985:12987 Coqlib <> zlt def
R13009:13019 Integers Int testbit def
R13022:13028 Integers Int and def
R13033:13040 Integers Int repr def
R13043:13048 Coq.ZArith.BinInt Z ones def
R13009:13019 Integers Int testbit def
R13022:13028 Integers Int and def
R13033:13040 Integers Int repr def
R13043:13048 Coq.ZArith.BinInt Z ones def
R13145:13147 Coqlib <> zlt def
R13145:13147 Coqlib <> zlt def
R13170:13180 Integers Int testbit def
R13242:13242 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R13183:13189 Integers Int and def
R13218:13225 Integers Int repr def
R13228:13233 Coq.ZArith.BinInt Z ones def
R13192:13199 Integers Int shru def
R13204:13211 Integers Int repr def
R13170:13180 Integers Int testbit def
R13242:13242 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R13183:13189 Integers Int and def
R13218:13225 Integers Int repr def
R13228:13233 Coq.ZArith.BinInt Z ones def
R13192:13199 Integers Int shru def
R13204:13211 Integers Int repr def
R13282:13293 Integers Int unsigned def
R13296:13303 Integers Int repr def
R13282:13293 Integers Int unsigned def
R13296:13303 Integers Int repr def
R13327:13335 Coq.ZArith.BinInt Z sub_add thm
R13327:13335 Coq.ZArith.BinInt Z sub_add thm
R13390:13398 Coq.ZArith.BinInt Z sub_add thm
R13390:13398 Coq.ZArith.BinInt Z sub_add thm
R13417:13419 Coqlib <> zlt def
R13417:13419 Coqlib <> zlt def
R13442:13452 Integers Int testbit def
R13515:13515 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R13455:13461 Integers Int and def
R13491:13498 Integers Int repr def
R13501:13506 Coq.ZArith.BinInt Z ones def
R13464:13471 Integers Int shru def
R13476:13483 Integers Int repr def
R13442:13452 Integers Int testbit def
R13515:13515 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R13455:13461 Integers Int and def
R13491:13498 Integers Int repr def
R13501:13506 Coq.ZArith.BinInt Z ones def
R13464:13471 Integers Int shru def
R13476:13483 Integers Int repr def
R13556:13567 Integers Int unsigned def
R13570:13577 Integers Int repr def
R13556:13567 Integers Int unsigned def
R13570:13577 Integers Int repr def
R13603:13611 Coq.ZArith.BinInt Z sub_add thm
R13603:13611 Coq.ZArith.BinInt Z sub_add thm
R13666:13677 Integers Int unsigned def
R13680:13687 Integers Int repr def
R13666:13677 Integers Int unsigned def
R13680:13687 Integers Int repr def
R13713:13721 Coq.ZArith.BinInt Z sub_add thm
R13713:13721 Coq.ZArith.BinInt Z sub_add thm
R13744:13754 Integers Int testbit def
R13785:13785 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R13757:13764 Integers Int shru def
R13769:13776 Integers Int repr def
R13744:13754 Integers Int testbit def
R13785:13785 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R13757:13764 Integers Int shru def
R13769:13776 Integers Int repr def
R13826:13837 Integers Int unsigned def
R13840:13847 Integers Int repr def
R13826:13837 Integers Int unsigned def
R13840:13847 Integers Int repr def
R13873:13881 Coq.ZArith.BinInt Z sub_add thm
R13873:13881 Coq.ZArith.BinInt Z sub_add thm
R13936:13947 Integers Int unsigned def
R13950:13957 Integers Int repr def
R13936:13947 Integers Int unsigned def
R13950:13957 Integers Int repr def
R13983:13991 Coq.ZArith.BinInt Z sub_add thm
R13983:13991 Coq.ZArith.BinInt Z sub_add thm
prf 14012:14039 <> Zlength_intlist_to_Zlist_app
R14093:14099 Coq.Init.Logic <> :type_scope:x_'='_x not
R14058:14064 Coq.ZArith.Zcomplements <> Zlength def
R14067:14082 SHA256 <> intlist_to_Zlist def
R14087:14088 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14085:14086 pure_lemmas <> al var
R14089:14090 pure_lemmas <> bl var
R14130:14132 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14101:14107 Coq.ZArith.Zcomplements <> Zlength def
R14110:14125 SHA256 <> intlist_to_Zlist def
R14127:14128 pure_lemmas <> al var
R14133:14139 Coq.ZArith.Zcomplements <> Zlength def
R14142:14157 SHA256 <> intlist_to_Zlist def
R14159:14160 pure_lemmas <> bl var
R14224:14235 Coq.ZArith.Zcomplements <> Zlength_cons thm
R14224:14235 Coq.ZArith.Zcomplements <> Zlength_cons thm
R14224:14235 Coq.ZArith.Zcomplements <> Zlength_cons thm
R14224:14235 Coq.ZArith.Zcomplements <> Zlength_cons thm
R14224:14235 Coq.ZArith.Zcomplements <> Zlength_cons thm
R14224:14235 Coq.ZArith.Zcomplements <> Zlength_cons thm
R14224:14235 Coq.ZArith.Zcomplements <> Zlength_cons thm
R14224:14235 Coq.ZArith.Zcomplements <> Zlength_cons thm
R14224:14235 Coq.ZArith.Zcomplements <> Zlength_cons thm
R14224:14235 Coq.ZArith.Zcomplements <> Zlength_cons thm
prf 14271:14283 <> Forall_firstn
R14301:14301 pure_lemmas <> A var
R14331:14336 Coq.Lists.List <> Forall ind
R14341:14346 Coq.Lists.List <> firstn def
R14350:14350 pure_lemmas <> l var
R14348:14348 pure_lemmas <> n var
R14338:14338 pure_lemmas <> f var
R14317:14322 Coq.Lists.List <> Forall ind
R14326:14326 pure_lemmas <> l var
R14324:14324 pure_lemmas <> f var
prf 14478:14489 <> Forall_skipn
R14507:14507 pure_lemmas <> A var
R14537:14542 Coq.Lists.List <> Forall ind
R14547:14551 Coq.Lists.List <> skipn def
R14555:14555 pure_lemmas <> l var
R14553:14553 pure_lemmas <> n var
R14544:14544 pure_lemmas <> f var
R14523:14528 Coq.Lists.List <> Forall ind
R14532:14532 pure_lemmas <> l var
R14530:14530 pure_lemmas <> f var
prf 14705:14712 <> add_repr
R14760:14762 Coq.Init.Logic <> :type_scope:x_'='_x not
R14727:14733 Integers Int add def
R14749:14756 Integers Int repr def
R14758:14758 pure_lemmas <> j var
R14736:14743 Integers Int repr def
R14745:14745 pure_lemmas <> i var
R14763:14770 Integers Int repr def
R14774:14774 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14773:14773 pure_lemmas <> i var
R14775:14775 pure_lemmas <> j var
R14804:14819 Integers Int add_unsigned thm
R14804:14819 Integers Int add_unsigned thm
R14829:14844 Integers Int eqm_samerepr thm
R14829:14844 Integers Int eqm_samerepr thm
R14855:14861 Integers Int eqm def
R14871:14881 Integers Int eqm_add thm
R14890:14900 Integers Int eqm_sym thm
R14909:14929 Integers Int eqm_unsigned_repr thm
R14871:14881 Integers Int eqm_add thm
R14890:14900 Integers Int eqm_sym thm
R14890:14900 Integers Int eqm_sym thm
R14909:14929 Integers Int eqm_unsigned_repr thm
R14909:14929 Integers Int eqm_unsigned_repr thm
prf 14944:14951 <> mul_repr
R15000:15002 Coq.Init.Logic <> :type_scope:x_'='_x not
R14967:14973 Integers Int mul def
R14989:14996 Integers Int repr def
R14998:14998 pure_lemmas <> y var
R14976:14983 Integers Int repr def
R14985:14985 pure_lemmas <> x var
R15003:15010 Integers Int repr def
R15014:15016 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R15013:15013 pure_lemmas <> x var
R15017:15017 pure_lemmas <> y var
R15043:15049 Integers Int mul def
R15058:15073 Integers Int eqm_samerepr thm
R15058:15073 Integers Int eqm_samerepr thm
R15091:15110 Integers Int unsigned_repr_eq thm
R15091:15110 Integers Int unsigned_repr_eq thm
R15091:15110 Integers Int unsigned_repr_eq thm
R15091:15110 Integers Int unsigned_repr_eq thm
R15119:15130 Integers Int eqm_mult thm
R15140:15146 Integers Int eqm def
R15155:15167 Integers Int eqmod_sym thm
R15176:15188 Integers Int eqmod_mod thm
R15119:15130 Integers Int eqm_mult thm
R15155:15167 Integers Int eqmod_sym thm
R15155:15167 Integers Int eqmod_sym thm
R15176:15188 Integers Int eqmod_mod thm
R15176:15188 Integers Int eqmod_mod thm
prf 15224:15233 <> hilo_lemma
R15312:15314 Coq.Init.Logic <> :type_scope:x_'='_x not
R15252:15252 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R15288:15289 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R15311:15311 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R15290:15297 Integers Int repr def
R15300:15303 SHA256 <> hilo def
R15308:15309 pure_lemmas <> lo var
R15305:15306 pure_lemmas <> hi var
R15253:15260 Integers Int repr def
R15273:15275 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R15263:15266 SHA256 <> hilo def
R15271:15272 pure_lemmas <> lo var
R15268:15269 pure_lemmas <> hi var
R15276:15286 Integers Int modulus def
R15315:15315 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R15318:15319 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R15322:15322 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R15320:15321 pure_lemmas <> lo var
R15316:15317 pure_lemmas <> hi var
R15339:15342 SHA256 <> hilo def
R15361:15371 Coq.ZArith.BinInt Z div_add_l thm
R15361:15371 Coq.ZArith.BinInt Z div_add_l thm
R15427:15444 Integers Int unsigned_range thm
R15407:15416 Coqlib <> Zdiv_small thm
R15407:15416 Coqlib <> Zdiv_small thm
R15427:15444 Integers Int unsigned_range thm
R15455:15463 Coq.ZArith.BinInt Z add_0_r thm
R15455:15463 Coq.ZArith.BinInt Z add_0_r thm
R15474:15490 Integers Int repr_unsigned thm
R15474:15490 Integers Int repr_unsigned thm
R15522:15529 pure_lemmas <> add_repr thm
R15522:15529 pure_lemmas <> add_repr thm
R15543:15550 pure_lemmas <> mul_repr thm
R15543:15550 pure_lemmas <> mul_repr thm
R15562:15569 Integers Int repr def
R15571:15581 Integers Int modulus def
R15590:15597 Integers Int repr def
R15590:15597 Integers Int repr def
R15562:15569 Integers Int repr def
R15571:15581 Integers Int modulus def
R15611:15622 Integers Int mul_zero thm
R15611:15622 Integers Int mul_zero thm
R15633:15646 Integers Int add_zero_l thm
R15633:15646 Integers Int add_zero_l thm
R15655:15671 Integers Int repr_unsigned thm
R15655:15671 Integers Int repr_unsigned thm
R15680:15695 Integers Int eqm_samerepr thm
R15680:15695 Integers Int eqm_samerepr thm
R15705:15711 Integers Int eqm def
R15740:15744 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R15729:15739 Integers Int modulus def
R15745:15755 Integers Int modulus def
R15740:15744 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R15729:15739 Integers Int modulus def
R15745:15755 Integers Int modulus def
R15765:15777 Integers Int eqmod_sym thm
R15765:15777 Integers Int eqmod_sym thm
R15786:15798 Integers Int eqmod_mod thm
R15786:15798 Integers Int eqmod_mod thm
prf 15834:15861 <> Forall_isbyteZ_unsigned_repr
R15895:15900 Coq.Lists.List <> Forall ind
R15911:15913 Coq.Lists.List <> map def
R15929:15931 Coq.Lists.List <> map def
R15942:15942 pure_lemmas <> l var
R15933:15940 Integers Int repr def
R15915:15926 Integers Int unsigned def
R15902:15908 SHA256 <> isbyteZ def
R15875:15880 Coq.Lists.List <> Forall ind
R15890:15890 pure_lemmas <> l var
R15882:15888 SHA256 <> isbyteZ def
R16001:16017 Integers Int unsigned_repr thm
R16001:16017 Integers Int unsigned_repr thm
R16033:16039 SHA256 <> isbyteZ def
prf 16091:16103 <> divide_hashed
R16119:16122 Coq.Init.Datatypes <> list ind
R16124:16126 Integers <> int syndef
R16167:16175 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16135:16147 Coq.Numbers.Natural.Peano.NPeano <> divide def
R16157:16162 Coq.Init.Datatypes <> length def
R16164:16165 pure_lemmas <> bb var
R16149:16154 pure_lemmas <> LBLOCK def
R16176:16176 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R16184:16186 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R16197:16197 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R16177:16183 SHA256 <> LBLOCKz def
R16187:16193 Coq.ZArith.Zcomplements <> Zlength def
R16195:16196 pure_lemmas <> bb var
R16244:16251 Coq.ZArith.BinInt Z of_nat def
R16244:16251 Coq.ZArith.BinInt Z of_nat def
R16265:16279 Coq.ZArith.Zcomplements <> Zlength_correct thm
R16265:16279 Coq.ZArith.Zcomplements <> Zlength_correct thm
R16293:16305 Coq.ZArith.Znat Nat2Z inj_mul thm
R16293:16305 Coq.ZArith.Znat Nat2Z inj_mul thm
R16322:16329 Coq.ZArith.BinInt Z to_nat def
R16322:16329 Coq.ZArith.BinInt Z to_nat def
R16343:16357 Coq.ZArith.Zcomplements <> Zlength_correct thm
R16343:16357 Coq.ZArith.Zcomplements <> Zlength_correct thm
R16374:16377 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R16374:16377 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R16391:16394 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R16396:16398 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16399:16405 SHA256 <> LBLOCKz def
R16391:16394 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R16396:16398 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16399:16405 SHA256 <> LBLOCKz def
R16424:16444 Coq.ZArith.BinInt Z mul_nonneg_cancel_r thm
R16424:16444 Coq.ZArith.BinInt Z mul_nonneg_cancel_r thm
R16471:16478 Coq.ZArith.Znat Z2Nat id thm
R16482:16482 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16483:16489 SHA256 <> LBLOCKz def
R16471:16478 Coq.ZArith.Znat Z2Nat id thm
R16482:16482 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16483:16489 SHA256 <> LBLOCKz def
R16516:16524 Coq.ZArith.Znat Nat2Z inj thm
R16516:16524 Coq.ZArith.Znat Nat2Z inj thm
R16563:16570 Coq.ZArith.BinInt Z to_nat def
R16572:16578 SHA256 <> LBLOCKz def
R16550:16555 pure_lemmas <> LBLOCK def
R16550:16555 pure_lemmas <> LBLOCK def
R16563:16570 Coq.ZArith.BinInt Z to_nat def
R16572:16578 SHA256 <> LBLOCKz def
R16590:16602 Coq.ZArith.Znat Z2Nat inj_mul thm
R16590:16602 Coq.ZArith.Znat Z2Nat inj_mul thm
prf 16623:16643 <> hash_blocks_equation'
R16659:16667 SHA256 <> registers def
R16677:16680 Coq.Init.Datatypes <> list ind
R16682:16684 Integers <> int syndef
R16712:16721 Coq.Init.Logic <> :type_scope:x_'='_x not
R16695:16705 SHA256 <> hash_blocks thm
R16709:16711 pure_lemmas <> msg var
R16707:16707 pure_lemmas <> r var
R16728:16730 pure_lemmas <> msg var
R16746:16747 SHA256 <> ::'['_']' not
R16752:16752 pure_lemmas <> r var
R16764:16767 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R16773:16783 SHA256 <> hash_blocks thm
R16821:16825 Coq.Lists.List <> skipn def
R16834:16836 pure_lemmas <> msg var
R16827:16832 pure_lemmas <> LBLOCK def
R16786:16795 SHA256 <> hash_block def
R16800:16805 Coq.Lists.List <> firstn def
R16814:16816 pure_lemmas <> msg var
R16807:16812 pure_lemmas <> LBLOCK def
R16797:16797 pure_lemmas <> r var
R16864:16883 SHA256 <> hash_blocks_equation thm
R16864:16883 SHA256 <> hash_blocks_equation thm
prf 16898:16906 <> CBLOCK_eq
R16915:16915 Coq.Init.Logic <> :type_scope:x_'='_x not
R16909:16914 pure_lemmas <> CBLOCK def
prf 16955:16963 <> LBLOCK_eq
R16972:16972 Coq.Init.Logic <> :type_scope:x_'='_x not
R16966:16971 pure_lemmas <> LBLOCK def
prf 17013:17028 <> hash_blocks_last
R17191:17193 Coq.Init.Logic <> :type_scope:x_'='_x not
R17160:17169 SHA256 <> hash_block def
R17190:17190 pure_lemmas <> c var
R17172:17182 SHA256 <> hash_blocks thm
R17186:17187 pure_lemmas <> bl var
R17184:17184 pure_lemmas <> a var
R17194:17204 SHA256 <> hash_blocks thm
R17211:17213 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17209:17210 pure_lemmas <> bl var
R17214:17214 pure_lemmas <> c var
R17206:17206 pure_lemmas <> a var
R17143:17145 Coq.Init.Logic <> :type_scope:x_'='_x not
R17134:17140 Coq.ZArith.Zcomplements <> Zlength def
R17142:17142 pure_lemmas <> c var
R17146:17152 SHA256 <> LBLOCKz def
R17093:17093 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R17101:17103 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R17114:17114 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R17094:17100 SHA256 <> LBLOCKz def
R17104:17110 Coq.ZArith.Zcomplements <> Zlength def
R17112:17113 pure_lemmas <> bl var
R17071:17073 Coq.Init.Logic <> :type_scope:x_'='_x not
R17062:17068 Coq.ZArith.Zcomplements <> Zlength def
R17070:17070 pure_lemmas <> a var
R17248:17250 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R17251:17256 pure_lemmas <> LBLOCK def
R17276:17284 pure_lemmas <> LBLOCK_eq thm
R17248:17250 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R17251:17256 pure_lemmas <> LBLOCK def
R17276:17284 pure_lemmas <> LBLOCK_eq thm
R17301:17313 pure_lemmas <> divide_hashed thm
R17301:17313 pure_lemmas <> divide_hashed thm
R17352:17366 Coq.ZArith.Zcomplements <> Zlength_correct thm
R17352:17366 Coq.ZArith.Zcomplements <> Zlength_correct thm
R17392:17399 Coq.ZArith.BinInt Z of_nat def
R17392:17399 Coq.ZArith.BinInt Z of_nat def
R17468:17475 Coq.ZArith.BinInt Z of_nat def
R17477:17482 pure_lemmas <> LBLOCK def
R17454:17460 SHA256 <> LBLOCKz def
R17454:17460 SHA256 <> LBLOCKz def
R17468:17475 Coq.ZArith.BinInt Z of_nat def
R17477:17482 pure_lemmas <> LBLOCK def
R17498:17506 Coq.ZArith.Znat Nat2Z inj thm
R17498:17506 Coq.ZArith.Znat Nat2Z inj thm
R17521:17529 Coq.ZArith.Znat Nat2Z inj thm
R17521:17529 Coq.ZArith.Znat Nat2Z inj thm
R17606:17626 pure_lemmas <> hash_blocks_equation' thm
R17606:17626 pure_lemmas <> hash_blocks_equation' thm
R17645:17665 pure_lemmas <> hash_blocks_equation' thm
R17645:17665 pure_lemmas <> hash_blocks_equation' thm
R17740:17750 common_lemmas <> firstn_same thm
R17740:17750 common_lemmas <> firstn_same thm
R17771:17775 Coq.Lists.List <> skipn def
R17777:17782 pure_lemmas <> LBLOCK def
R17794:17796 Coq.Init.Datatypes <> nil constr
R17798:17800 Integers <> int syndef
R17794:17796 Coq.Init.Datatypes <> nil constr
R17798:17800 Integers <> int syndef
R17771:17775 Coq.Lists.List <> skipn def
R17777:17782 pure_lemmas <> LBLOCK def
R17812:17832 pure_lemmas <> hash_blocks_equation' thm
R17812:17832 pure_lemmas <> hash_blocks_equation' thm
R17860:17871 SHA256 <> skipn_length thm
R17873:17878 pure_lemmas <> LBLOCK def
R17860:17871 SHA256 <> skipn_length thm
R17873:17878 pure_lemmas <> LBLOCK def
R17932:17936 Coq.Lists.List <> skipn def
R17938:17943 pure_lemmas <> LBLOCK def
R17932:17936 Coq.Lists.List <> skipn def
R17938:17943 pure_lemmas <> LBLOCK def
R17986:17988 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R17983:17983 Coq.Init.Datatypes <> S constr
R17989:17994 pure_lemmas <> LBLOCK def
R18017:18019 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R18008:18010 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R18011:18016 pure_lemmas <> LBLOCK def
R18020:18025 pure_lemmas <> LBLOCK def
R18017:18019 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R18008:18010 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R18011:18016 pure_lemmas <> LBLOCK def
R18020:18025 pure_lemmas <> LBLOCK def
R17986:17988 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R17983:17983 Coq.Init.Datatypes <> S constr
R17989:17994 pure_lemmas <> LBLOCK def
R18068:18088 pure_lemmas <> hash_blocks_equation' thm
R18068:18088 pure_lemmas <> hash_blocks_equation' thm
R18137:18138 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R18137:18138 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R18214:18233 SHA256 <> hash_blocks_equation thm
R18214:18233 SHA256 <> hash_blocks_equation thm
R18280:18282 Coq.Init.Datatypes <> app def
R18295:18297 Coq.Init.Datatypes <> app def
R18295:18297 Coq.Init.Datatypes <> app def
R18309:18310 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R18309:18310 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R18379:18389 common_lemmas <> firstn_app1 thm
R18379:18389 common_lemmas <> firstn_app1 thm
R18409:18418 common_lemmas <> skipn_app1 thm
R18409:18418 common_lemmas <> skipn_app1 thm
R18438:18454 common_lemmas <> length_hash_block thm
R18438:18454 common_lemmas <> length_hash_block thm
R18494:18499 pure_lemmas <> LBLOCK def
R18494:18499 pure_lemmas <> LBLOCK def
R18510:18522 Coq.Lists.List <> firstn_length thm
R18510:18522 Coq.Lists.List <> firstn_length thm
R18531:18535 Coq.Init.Peano <> min_l thm
R18531:18535 Coq.Init.Peano <> min_l thm
R18557:18568 SHA256 <> skipn_length thm
R18557:18568 SHA256 <> skipn_length thm
R18593:18598 pure_lemmas <> LBLOCK def
R18577:18586 Coq.Arith.Plus <> plus_reg_l thm
R18593:18598 pure_lemmas <> LBLOCK def
R18577:18586 Coq.Arith.Plus <> plus_reg_l thm
R18609:18617 Coq.Arith.Plus <> plus_comm thm
R18609:18617 Coq.Arith.Plus <> plus_comm thm
R18629:18646 Coq.Numbers.Natural.Peano.NPeano Nat sub_add thm
R18629:18646 Coq.Numbers.Natural.Peano.NPeano Nat sub_add thm
R18717:18720 Coq.Init.Peano <> :nat_scope:x_'>='_x not
R18710:18710 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R18711:18716 pure_lemmas <> LBLOCK def
R18717:18720 Coq.Init.Peano <> :nat_scope:x_'>='_x not
R18710:18710 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R18711:18716 pure_lemmas <> LBLOCK def
R18744:18746 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R18747:18752 pure_lemmas <> LBLOCK def
R18744:18746 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R18747:18752 pure_lemmas <> LBLOCK def
prf 18797:18814 <> length_hash_blocks
R18928:18930 Coq.Init.Logic <> :type_scope:x_'='_x not
R18896:18901 Coq.Init.Datatypes <> length def
R18904:18914 SHA256 <> hash_blocks thm
R18921:18926 pure_lemmas <> blocks var
R18916:18919 pure_lemmas <> regs var
R18864:18864 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R18872:18874 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R18889:18889 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R18865:18871 SHA256 <> LBLOCKz def
R18875:18881 Coq.ZArith.Zcomplements <> Zlength def
R18883:18888 pure_lemmas <> blocks var
R18850:18852 Coq.Init.Logic <> :type_scope:x_'='_x not
R18839:18844 Coq.Init.Datatypes <> length def
R18846:18849 pure_lemmas <> regs var
R18983:18997 Coq.ZArith.Zcomplements <> Zlength_correct thm
R18983:18997 Coq.ZArith.Zcomplements <> Zlength_correct thm
R19021:19031 pure_lemmas <> LBLOCKz_pos thm
R19021:19031 pure_lemmas <> LBLOCKz_pos thm
R19056:19063 Coq.ZArith.BinInt Z of_nat def
R19065:19070 pure_lemmas <> LBLOCK def
R19042:19048 SHA256 <> LBLOCKz def
R19042:19048 SHA256 <> LBLOCKz def
R19056:19063 Coq.ZArith.BinInt Z of_nat def
R19065:19070 pure_lemmas <> LBLOCK def
R19124:19144 Coq.ZArith.BinInt Z mul_nonneg_cancel_r thm
R19091:19098 Coq.ZArith.Znat Z2Nat id thm
R19091:19098 Coq.ZArith.Znat Z2Nat id thm
R19124:19144 Coq.ZArith.BinInt Z mul_nonneg_cancel_r thm
R19183:19195 Coq.ZArith.Znat Nat2Z inj_mul thm
R19183:19195 Coq.ZArith.Znat Nat2Z inj_mul thm
R19210:19218 Coq.ZArith.Znat Nat2Z inj thm
R19210:19218 Coq.ZArith.Znat Nat2Z inj thm
R19263:19270 Coq.ZArith.BinInt Z to_nat def
R19263:19270 Coq.ZArith.BinInt Z to_nat def
R19319:19339 pure_lemmas <> hash_blocks_equation' thm
R19319:19339 pure_lemmas <> hash_blocks_equation' thm
R19374:19379 pure_lemmas <> LBLOCK def
R19407:19427 pure_lemmas <> hash_blocks_equation' thm
R19407:19427 pure_lemmas <> hash_blocks_equation' thm
R19445:19446 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R19445:19446 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R19486:19502 common_lemmas <> length_hash_block thm
R19486:19502 common_lemmas <> length_hash_block thm
R19542:19547 pure_lemmas <> LBLOCK def
R19542:19547 pure_lemmas <> LBLOCK def
R19558:19570 Coq.Lists.List <> firstn_length thm
R19558:19570 Coq.Lists.List <> firstn_length thm
R19579:19583 Coq.Init.Peano <> min_l thm
R19579:19583 Coq.Init.Peano <> min_l thm
R19618:19629 SHA256 <> skipn_length thm
R19618:19629 SHA256 <> skipn_length thm
R19673:19681 Coq.Arith.Plus <> plus_comm thm
R19673:19681 Coq.Arith.Plus <> plus_comm thm
R19692:19709 Coq.Numbers.Natural.Peano.NPeano Nat add_sub thm
R19692:19709 Coq.Numbers.Natural.Peano.NPeano Nat add_sub thm
prf 19779:19793 <> nth_list_repeat
R19813:19813 pure_lemmas <> A var
R19846:19848 Coq.Init.Logic <> :type_scope:x_'='_x not
R19821:19823 Coq.Lists.List <> nth def
R19845:19845 pure_lemmas <> x var
R19828:19838 Coqlib <> list_repeat def
R19842:19842 pure_lemmas <> x var
R19840:19840 pure_lemmas <> n var
R19825:19825 pure_lemmas <> i var
R19849:19849 pure_lemmas <> x var
prf 19910:19924 <> map_list_repeat
R19949:19949 pure_lemmas <> B var
R19944:19944 pure_lemmas <> A var
R19985:19987 Coq.Init.Logic <> :type_scope:x_'='_x not
R19962:19964 Coq.Lists.List <> map def
R19969:19979 Coqlib <> list_repeat def
R19983:19983 pure_lemmas <> x var
R19981:19981 pure_lemmas <> n var
R19966:19966 pure_lemmas <> f var
R19988:19998 Coqlib <> list_repeat def
R20003:20003 pure_lemmas <> f var
R20005:20005 pure_lemmas <> x var
R20000:20000 pure_lemmas <> n var
prf 20071:20088 <> Forall_list_repeat
R20106:20106 pure_lemmas <> A var
R20123:20123 pure_lemmas <> A var
R20139:20144 Coq.Lists.List <> Forall ind
R20149:20159 Coqlib <> list_repeat def
R20163:20163 pure_lemmas <> x var
R20161:20161 pure_lemmas <> n var
R20146:20146 pure_lemmas <> f var
R20132:20132 pure_lemmas <> f var
R20134:20134 pure_lemmas <> x var
prf 20221:20234 <> ZtoNat_Zlength
R20254:20257 Coq.Init.Datatypes <> list ind
R20259:20259 pure_lemmas <> A var
R20283:20285 Coq.Init.Logic <> :type_scope:x_'='_x not
R20263:20270 Coq.ZArith.BinInt Z to_nat def
R20273:20279 Coq.ZArith.Zcomplements <> Zlength def
R20281:20281 pure_lemmas <> l var
R20286:20291 Coq.Init.Datatypes <> length def
R20293:20293 pure_lemmas <> l var
R20319:20333 Coq.ZArith.Zcomplements <> Zlength_correct thm
R20319:20333 Coq.ZArith.Zcomplements <> Zlength_correct thm
R20342:20349 Coq.ZArith.Znat Nat2Z id thm
R20342:20349 Coq.ZArith.Znat Nat2Z id thm
R20371:20384 pure_lemmas <> ZtoNat_Zlength thm
prf 20401:20414 <> Zlength_nonneg
R20433:20436 Coq.Init.Datatypes <> list ind
R20438:20438 pure_lemmas <> A var
R20443:20446 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R20447:20453 Coq.ZArith.Zcomplements <> Zlength def
R20455:20455 pure_lemmas <> l var
R20481:20495 Coq.ZArith.Zcomplements <> Zlength_correct thm
R20481:20495 Coq.ZArith.Zcomplements <> Zlength_correct thm
