DIGEST 04ea44a22a55f86c15397b8f01544c11
Fpure_lemmas
R198:203 Coq.funind.Recdef <> <> lib
R221:228 Integers <> <> lib
R239:256 Coq.Strings.String <> <> lib
R267:283 Coq.Strings.Ascii <> <> lib
R364:369 Coqlib <> <> lib
R492:495 Coq.Lists.List <> <> lib
R611:616 SHA256 <> <> lib
R688:694 Coqlib2 <> <> lib
R747:759 common_lemmas <> <> lib
R785:789 Coq.micromega.Psatz <> <> lib
R807:813 SHA256 <> CBLOCKz def
R815:821 SHA256 <> LBLOCKz def
prf 831:844 <> Zlength_length
R863:866 Coq.Init.Datatypes <> list ind
R868:868 pure_lemmas <> A var
R875:875 Coq.Numbers.BinNums <> Z ind
R912:916 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R908:910 Coq.Init.Logic <> :type_scope:x_'='_x not
R898:904 Coq.ZArith.Zcomplements <> Zlength def
R906:907 pure_lemmas <> al var
R911:911 pure_lemmas <> n var
R926:928 Coq.Init.Logic <> :type_scope:x_'='_x not
R917:922 Coq.Init.Datatypes <> length def
R924:925 pure_lemmas <> al var
R929:936 Coq.ZArith.BinInt Z to_nat def
R938:938 pure_lemmas <> n var
R884:887 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R888:888 pure_lemmas <> n var
R965:979 Coq.ZArith.Zcomplements <> Zlength_correct thm
R965:979 Coq.ZArith.Zcomplements <> Zlength_correct thm
R1008:1015 Coq.ZArith.Znat Z2Nat id thm
R1008:1015 Coq.ZArith.Znat Z2Nat id thm
R1042:1050 Coq.ZArith.Znat Nat2Z inj thm
R1042:1050 Coq.ZArith.Znat Nat2Z inj thm
R1083:1091 Coq.ZArith.Znat Z2Nat inj thm
R1083:1091 Coq.ZArith.Znat Z2Nat inj thm
R1113:1120 Coq.ZArith.Znat Nat2Z id thm
R1113:1120 Coq.ZArith.Znat Nat2Z id thm
prf 1141:1157 <> int_min_signed_eq
R1174:1176 Coq.Init.Logic <> :type_scope:x_'='_x not
R1160:1173 Integers Int min_signed def
prf 1222:1238 <> int_max_signed_eq
R1255:1257 Coq.Init.Logic <> :type_scope:x_'='_x not
R1241:1254 Integers Int max_signed def
prf 1302:1320 <> int_max_unsigned_eq
R1339:1341 Coq.Init.Logic <> :type_scope:x_'='_x not
R1323:1338 Integers Int max_unsigned def
R1418:1434 pure_lemmas <> int_min_signed_eq thm
R1452:1468 pure_lemmas <> int_max_signed_eq thm
R1486:1504 pure_lemmas <> int_max_unsigned_eq thm
R1568:1578 Integers Int bits_or thm
R1616:1627 Integers Int bits_shl thm
R1665:1676 Integers Int bits_and thm
R1714:1726 Integers Int bits_shru thm
R1764:1780 Integers Int unsigned_repr thm
R1818:1833 Integers Int testbit_repr thm
R1871:1878 Coqlib2 <> if_false thm
R1916:1922 Coqlib2 <> if_true thm
R1960:1974 Coq.ZArith.BinInt Z ones_spec_low thm
R2012:2027 Coq.ZArith.BinInt Z ones_spec_high thm
R2065:2075 Coq.Bool.Bool <> orb_false_r thm
R2077:2086 Coq.Bool.Bool <> orb_true_r thm
R2088:2099 Coq.Bool.Bool <> andb_false_r thm
R2101:2111 Coq.Bool.Bool <> andb_true_r thm
R2137:2147 Coq.Bool.Bool <> orb_false_l thm
R2149:2158 Coq.Bool.Bool <> orb_true_l thm
R2160:2171 Coq.Bool.Bool <> andb_false_l thm
R2173:2183 Coq.Bool.Bool <> andb_true_l thm
R2209:2221 Coq.ZArith.BinInt Z add_simpl_r thm
R2247:2263 Integers Int unsigned_repr thm
prf 2304:2316 <> Ztest_Inttest
R2356:2358 Coq.Init.Logic <> :type_scope:x_'='_x not
R2330:2338 Coq.ZArith.BinInt Z testbit def
R2341:2352 Integers Int unsigned def
R2354:2354 pure_lemmas <> a var
R2359:2369 Integers Int testbit def
R2371:2371 pure_lemmas <> a var
R2412:2424 pure_lemmas <> Ztest_Inttest thm
def 2449:2452 <> swap
R2458:2460 Integers <> int syndef
R2465:2467 Integers <> int syndef
R2473:2478 Integers Int or def
R2535:2540 Integers Int or def
R2608:2613 Integers Int or def
R2684:2686 SHA256 <> Shr def
R2691:2691 pure_lemmas <> i var
R2616:2622 Integers Int shl def
R2661:2668 Integers Int repr def
R2625:2631 Integers Int and def
R2645:2652 Integers Int repr def
R2634:2636 SHA256 <> Shr def
R2641:2641 pure_lemmas <> i var
R2543:2549 Integers Int shl def
R2587:2594 Integers Int repr def
R2552:2558 Integers Int and def
R2571:2578 Integers Int repr def
R2561:2563 SHA256 <> Shr def
R2567:2567 pure_lemmas <> i var
R2481:2487 Integers Int shl def
R2517:2524 Integers Int repr def
R2490:2496 Integers Int and def
R2501:2508 Integers Int repr def
R2498:2498 pure_lemmas <> i var
prf 2704:2712 <> swap_swap
R2738:2740 Coq.Init.Logic <> :type_scope:x_'='_x not
R2725:2728 pure_lemmas <> swap def
R2731:2734 pure_lemmas <> swap def
R2736:2736 pure_lemmas <> w var
R2741:2741 pure_lemmas <> w var
R2758:2761 pure_lemmas <> swap def
R2764:2766 SHA256 <> Shr def
R2783:2798 Integers Int same_bits_eq thm
R2783:2798 Integers Int same_bits_eq thm
R2830:2830 Coq.Init.Logic <> :type_scope:x_'='_x not
R2817:2829 Integers Int zwordsize def
R2830:2830 Coq.Init.Logic <> :type_scope:x_'='_x not
R2817:2829 Integers Int zwordsize def
R2868:2873 Coq.ZArith.BinInt Z ones def
R2868:2873 Coq.ZArith.BinInt Z ones def
R2889:2891 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R2892:2907 Integers Int max_unsigned def
R2889:2891 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R2892:2907 Integers Int max_unsigned def
prf 3044:3062 <> map_swap_involutive
R3097:3100 Coq.Init.Logic <> :type_scope:x_'='_x not
R3076:3078 Coq.Lists.List <> map def
R3086:3088 Coq.Lists.List <> map def
R3095:3095 pure_lemmas <> l var
R3090:3093 pure_lemmas <> swap def
R3080:3083 pure_lemmas <> swap def
R3101:3101 pure_lemmas <> l var
R3128:3134 Coq.Lists.List <> map_map thm
R3128:3134 Coq.Lists.List <> map_map thm
R3157:3160 pure_lemmas <> swap def
R3163:3166 pure_lemmas <> swap def
R3168:3168 pure_lemmas <> x var
R3179:3190 Coq.Init.Datatypes <> id def
R3192:3194 Integers <> int syndef
R3179:3190 Coq.Init.Datatypes <> id def
R3192:3194 Integers <> int syndef
R3157:3160 pure_lemmas <> swap def
R3163:3166 pure_lemmas <> swap def
R3168:3168 pure_lemmas <> x var
R3205:3210 Coq.Lists.List <> map_id thm
R3205:3210 Coq.Lists.List <> map_id thm
R3247:3255 pure_lemmas <> swap_swap thm
R3247:3255 pure_lemmas <> swap_swap thm
prf 3270:3284 <> isbyteZ_testbit
R3340:3342 Coq.Init.Logic <> :type_scope:x_'='_x not
R3327:3335 Coq.ZArith.BinInt Z testbit def
R3339:3339 pure_lemmas <> j var
R3337:3337 pure_lemmas <> i var
R3343:3347 Coq.Init.Datatypes <> false constr
R3318:3321 Coq.ZArith.BinInt <> :Z_scope:x_'>='_x not
R3317:3317 pure_lemmas <> j var
R3302:3305 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R3307:3309 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R3306:3306 pure_lemmas <> i var
R3306:3306 pure_lemmas <> i var
R3374:3392 Integers Byte Ztestbit_above thm
R3374:3392 Integers Byte Ztestbit_above thm
prf 3429:3451 <> length_intlist_to_Zlist
R3493:3495 Coq.Init.Logic <> :type_scope:x_'='_x not
R3466:3471 Coq.Init.Datatypes <> length def
R3474:3489 SHA256 <> intlist_to_Zlist def
R3491:3491 pure_lemmas <> l var
R3498:3500 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R3501:3506 Coq.Init.Datatypes <> length def
R3508:3508 pure_lemmas <> l var
prf 3582:3605 <> Zlength_intlist_to_Zlist
R3648:3650 Coq.Init.Logic <> :type_scope:x_'='_x not
R3620:3626 Coq.ZArith.Zcomplements <> Zlength def
R3629:3644 SHA256 <> intlist_to_Zlist def
R3646:3646 pure_lemmas <> l var
R3655:3655 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R3651:3654 SHA256 <> WORD def
R3656:3662 Coq.ZArith.Zcomplements <> Zlength def
R3664:3664 pure_lemmas <> l var
R3697:3711 Coq.ZArith.Zcomplements <> Zlength_correct thm
R3697:3711 Coq.ZArith.Zcomplements <> Zlength_correct thm
R3697:3711 Coq.ZArith.Zcomplements <> Zlength_correct thm
R3697:3711 Coq.ZArith.Zcomplements <> Zlength_correct thm
R3722:3744 pure_lemmas <> length_intlist_to_Zlist thm
R3722:3744 pure_lemmas <> length_intlist_to_Zlist thm
R3755:3767 Coq.ZArith.Znat Nat2Z inj_mul thm
R3755:3767 Coq.ZArith.Znat Nat2Z inj_mul thm
prf 3795:3824 <> intlist_to_Zlist_Z_to_int_cons
R3951:3959 Coq.Init.Logic <> :type_scope:x_'='_x not
R3911:3926 SHA256 <> intlist_to_Zlist def
R3945:3948 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3929:3936 SHA256 <> Z_to_Int def
R3944:3944 pure_lemmas <> d var
R3942:3942 pure_lemmas <> c var
R3940:3940 pure_lemmas <> b var
R3938:3938 pure_lemmas <> a var
R3949:3949 pure_lemmas <> l var
R3961:3962 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3960:3960 pure_lemmas <> a var
R3964:3965 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3963:3963 pure_lemmas <> b var
R3967:3968 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3966:3966 pure_lemmas <> c var
R3970:3972 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R3969:3969 pure_lemmas <> d var
R3973:3988 SHA256 <> intlist_to_Zlist def
R3990:3990 pure_lemmas <> l var
R3893:3899 SHA256 <> isbyteZ def
R3901:3901 pure_lemmas <> d var
R3880:3886 SHA256 <> isbyteZ def
R3888:3888 pure_lemmas <> c var
R3867:3873 SHA256 <> isbyteZ def
R3875:3875 pure_lemmas <> b var
R3854:3860 SHA256 <> isbyteZ def
R3862:3862 pure_lemmas <> a var
R4022:4028 SHA256 <> isbyteZ def
R4057:4057 Coq.Init.Logic <> :type_scope:x_'='_x not
R4044:4056 Integers Int zwordsize def
R4057:4057 Coq.Init.Logic <> :type_scope:x_'='_x not
R4044:4056 Integers Int zwordsize def
R4087:4094 SHA256 <> Z_to_Int def
R4097:4099 SHA256 <> Shr def
R4128:4133 Coq.ZArith.BinInt Z ones def
R4128:4133 Coq.ZArith.BinInt Z ones def
R4181:4184 Coq.Init.Logic <> :type_scope:x_'='_x not
R4181:4184 Coq.Init.Logic <> :type_scope:x_'='_x not
R4204:4215 Integers Int unsigned def
R4218:4225 Integers Int repr def
R4252:4268 Integers Int unsigned_repr thm
R4298:4313 Integers Int same_bits_eq thm
R4204:4215 Integers Int unsigned def
R4218:4225 Integers Int repr def
R4252:4268 Integers Int unsigned_repr thm
R4204:4215 Integers Int unsigned def
R4218:4225 Integers Int repr def
R4252:4268 Integers Int unsigned_repr thm
R4204:4215 Integers Int unsigned def
R4218:4225 Integers Int repr def
R4252:4268 Integers Int unsigned_repr thm
R4204:4215 Integers Int unsigned def
R4218:4225 Integers Int repr def
R4252:4268 Integers Int unsigned_repr thm
R4298:4313 Integers Int same_bits_eq thm
R4298:4313 Integers Int same_bits_eq thm
R4298:4313 Integers Int same_bits_eq thm
R4298:4313 Integers Int same_bits_eq thm
R4406:4420 pure_lemmas <> isbyteZ_testbit thm
R4406:4420 pure_lemmas <> isbyteZ_testbit thm
R4440:4454 pure_lemmas <> isbyteZ_testbit thm
R4440:4454 pure_lemmas <> isbyteZ_testbit thm
R4478:4492 pure_lemmas <> isbyteZ_testbit thm
R4478:4492 pure_lemmas <> isbyteZ_testbit thm
R4516:4530 pure_lemmas <> isbyteZ_testbit thm
R4516:4530 pure_lemmas <> isbyteZ_testbit thm
R4633:4647 pure_lemmas <> isbyteZ_testbit thm
R4633:4647 pure_lemmas <> isbyteZ_testbit thm
R4712:4726 pure_lemmas <> isbyteZ_testbit thm
R4712:4726 pure_lemmas <> isbyteZ_testbit thm
R4746:4760 pure_lemmas <> isbyteZ_testbit thm
R4746:4760 pure_lemmas <> isbyteZ_testbit thm
R4784:4798 pure_lemmas <> isbyteZ_testbit thm
R4784:4798 pure_lemmas <> isbyteZ_testbit thm
R4901:4915 pure_lemmas <> isbyteZ_testbit thm
R4901:4915 pure_lemmas <> isbyteZ_testbit thm
R4980:4994 pure_lemmas <> isbyteZ_testbit thm
R4980:4994 pure_lemmas <> isbyteZ_testbit thm
R5059:5073 pure_lemmas <> isbyteZ_testbit thm
R5059:5073 pure_lemmas <> isbyteZ_testbit thm
R5093:5107 pure_lemmas <> isbyteZ_testbit thm
R5093:5107 pure_lemmas <> isbyteZ_testbit thm
R5166:5168 Coqlib <> zlt def
R5223:5237 pure_lemmas <> isbyteZ_testbit thm
R5166:5168 Coqlib <> zlt def
R5223:5237 pure_lemmas <> isbyteZ_testbit thm
prf 5266:5290 <> Zlist_to_intlist_to_Zlist
R5306:5309 Coq.Init.Datatypes <> list ind
R5311:5311 Coq.Numbers.BinNums <> Z ind
R5425:5427 Coq.Init.Logic <> :type_scope:x_'='_x not
R5387:5402 SHA256 <> intlist_to_Zlist def
R5405:5420 SHA256 <> Zlist_to_intlist def
R5422:5423 pure_lemmas <> nl var
R5428:5429 pure_lemmas <> nl var
R5364:5369 Coq.Lists.List <> Forall ind
R5379:5380 pure_lemmas <> nl var
R5371:5377 SHA256 <> isbyteZ def
R5317:5329 Coq.Numbers.Natural.Peano.NPeano <> divide def
R5348:5353 Coq.Init.Datatypes <> length def
R5355:5356 pure_lemmas <> nl var
R5332:5339 Coq.ZArith.BinInt Z to_nat def
R5341:5344 SHA256 <> WORD def
R5627:5642 SHA256 <> Zlist_to_intlist def
R5650:5665 SHA256 <> Zlist_to_intlist def
R5650:5665 SHA256 <> Zlist_to_intlist def
R5676:5705 pure_lemmas <> intlist_to_Zlist_Z_to_int_cons thm
R5676:5705 pure_lemmas <> intlist_to_Zlist_Z_to_int_cons thm
prf 5750:5776 <> intlist_to_Zlist_to_intlist
R5792:5795 Coq.Init.Datatypes <> list ind
R5797:5799 Integers <> int syndef
R5843:5845 Coq.Init.Logic <> :type_scope:x_'='_x not
R5805:5820 SHA256 <> Zlist_to_intlist def
R5823:5838 SHA256 <> intlist_to_Zlist def
R5840:5841 pure_lemmas <> il var
R5846:5847 pure_lemmas <> il var
R5934:5934 Coq.Init.Logic <> :type_scope:x_'='_x not
R5921:5933 Integers Int zwordsize def
R5934:5934 Coq.Init.Logic <> :type_scope:x_'='_x not
R5921:5933 Integers Int zwordsize def
R5964:5971 SHA256 <> Z_to_Int def
R5974:5976 SHA256 <> Shr def
R6005:6010 Coq.ZArith.BinInt Z ones def
R6005:6010 Coq.ZArith.BinInt Z ones def
R6022:6037 Integers Int same_bits_eq thm
R6022:6037 Integers Int same_bits_eq thm
R6056:6072 Integers Int repr_unsigned thm
R6056:6072 Integers Int repr_unsigned thm
prf 6284:6306 <> length_Zlist_to_intlist
R6402:6404 Coq.Init.Logic <> :type_scope:x_'='_x not
R6375:6380 Coq.Init.Datatypes <> length def
R6383:6398 SHA256 <> Zlist_to_intlist def
R6400:6400 pure_lemmas <> l var
R6405:6405 pure_lemmas <> n var
R6337:6339 Coq.Init.Logic <> :type_scope:x_'='_x not
R6329:6334 Coq.Init.Datatypes <> length def
R6336:6336 pure_lemmas <> l var
R6354:6356 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R6341:6348 Coq.ZArith.BinInt Z to_nat def
R6350:6353 SHA256 <> WORD def
R6357:6357 pure_lemmas <> n var
R6477:6477 Coq.Init.Datatypes <> S constr
R6489:6491 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6489:6491 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R6477:6477 Coq.Init.Datatypes <> S constr
R6522:6538 Coq.Arith.Mult <> mult_plus_distr_l thm
R6522:6538 Coq.Arith.Mult <> mult_plus_distr_l thm
R6734:6736 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R6721:6728 Coq.ZArith.BinInt Z to_nat def
R6730:6733 SHA256 <> WORD def
R6734:6736 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R6721:6728 Coq.ZArith.BinInt Z to_nat def
R6730:6733 SHA256 <> WORD def
prf 6775:6796 <> big_endian_integer_ext
R6884:6886 Coq.Init.Logic <> :type_scope:x_'='_x not
R6864:6881 SHA256 <> big_endian_integer def
R6883:6883 pure_lemmas <> f var
R6887:6904 SHA256 <> big_endian_integer def
R6906:6907 pure_lemmas <> f' var
R6848:6850 Coq.Init.Logic <> :type_scope:x_'='_x not
R6845:6845 pure_lemmas <> f var
R6847:6847 pure_lemmas <> z var
R6851:6852 pure_lemmas <> f' var
R6854:6854 pure_lemmas <> z var
R6826:6829 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R6831:6833 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x_'<'_x not
R6830:6830 pure_lemmas <> z var
R6830:6830 pure_lemmas <> z var
R6834:6837 SHA256 <> WORD def
R6924:6941 SHA256 <> big_endian_integer def
def 7067:7072 <> LBLOCK
R7076:7078 Coq.Init.Datatypes <> nat ind
R7083:7090 Coq.ZArith.BinInt Z to_nat def
R7092:7098 SHA256 <> LBLOCKz def
def 7115:7120 <> CBLOCK
R7124:7126 Coq.Init.Datatypes <> nat ind
R7131:7138 Coq.ZArith.BinInt Z to_nat def
R7140:7146 SHA256 <> CBLOCKz def
R7156:7161 pure_lemmas <> LBLOCK def
R7163:7168 pure_lemmas <> CBLOCK def
prf 7178:7187 <> LBLOCK_zeq
R7205:7207 Coq.Init.Logic <> :type_scope:x_'='_x not
R7190:7197 Coq.ZArith.BinInt Z of_nat def
R7199:7204 pure_lemmas <> LBLOCK def
prf 7246:7255 <> CBLOCK_zeq
R7274:7276 Coq.Init.Logic <> :type_scope:x_'='_x not
R7259:7266 Coq.ZArith.BinInt Z of_nat def
R7268:7273 pure_lemmas <> CBLOCK def
prf 7316:7329 <> LBLOCKz_nonneg
R7334:7337 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R7338:7344 SHA256 <> LBLOCKz def
R7364:7370 SHA256 <> LBLOCKz def
R7364:7370 SHA256 <> LBLOCKz def
R7408:7421 pure_lemmas <> LBLOCKz_nonneg thm
prf 7431:7441 <> LBLOCKz_pos
R7446:7448 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R7449:7455 SHA256 <> LBLOCKz def
R7475:7481 SHA256 <> LBLOCKz def
R7475:7481 SHA256 <> LBLOCKz def
R7519:7529 pure_lemmas <> LBLOCKz_pos thm
prf 7539:7552 <> CBLOCKz_nonneg
R7557:7560 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R7561:7567 SHA256 <> CBLOCKz def
R7587:7593 SHA256 <> CBLOCKz def
R7587:7593 SHA256 <> CBLOCKz def
R7631:7644 pure_lemmas <> CBLOCKz_nonneg thm
prf 7654:7664 <> CBLOCKz_pos
R7669:7671 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R7672:7678 SHA256 <> CBLOCKz def
R7698:7704 SHA256 <> CBLOCKz def
R7698:7704 SHA256 <> CBLOCKz def
R7742:7752 pure_lemmas <> CBLOCKz_pos thm
prf 7762:7781 <> intlist_to_Zlist_app
R7824:7826 Coq.Init.Logic <> :type_scope:x_'='_x not
R7799:7814 SHA256 <> intlist_to_Zlist def
R7819:7820 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R7817:7818 pure_lemmas <> al var
R7821:7822 pure_lemmas <> bl var
R7846:7849 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R7827:7842 SHA256 <> intlist_to_Zlist def
R7844:7845 pure_lemmas <> al var
R7850:7865 SHA256 <> intlist_to_Zlist def
R7867:7868 pure_lemmas <> bl var
prf 7947:7956 <> firstn_app
R7980:7983 Coq.Init.Datatypes <> list ind
R7985:7985 pure_lemmas <> A var
R8025:8029 Coq.Init.Logic <> :type_scope:x_'='_x not
R8000:8003 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R7989:7994 Coq.Lists.List <> firstn def
R7998:7999 pure_lemmas <> al var
R7996:7996 pure_lemmas <> n var
R8004:8009 Coq.Lists.List <> firstn def
R8014:8018 Coq.Lists.List <> skipn def
R8022:8023 pure_lemmas <> al var
R8020:8020 pure_lemmas <> n var
R8011:8011 pure_lemmas <> m var
R8030:8035 Coq.Lists.List <> firstn def
R8043:8044 pure_lemmas <> al var
R8039:8039 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R8038:8038 pure_lemmas <> n var
R8040:8040 pure_lemmas <> m var
prf 8153:8161 <> nth_skipn
R8187:8187 pure_lemmas <> A var
R8220:8222 Coq.Init.Logic <> :type_scope:x_'='_x not
R8198:8200 Coq.Lists.List <> nth def
R8219:8219 pure_lemmas <> d var
R8205:8209 Coq.Lists.List <> skipn def
R8213:8216 pure_lemmas <> data var
R8211:8211 pure_lemmas <> n var
R8202:8202 pure_lemmas <> i var
R8223:8225 Coq.Lists.List <> nth def
R8238:8238 pure_lemmas <> d var
R8233:8236 pure_lemmas <> data var
R8229:8229 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R8228:8228 pure_lemmas <> i var
R8230:8230 pure_lemmas <> n var
R8384:8386 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R8387:8387 Coq.Init.Datatypes <> S constr
R8398:8398 Coq.Init.Datatypes <> S constr
R8402:8404 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R8398:8398 Coq.Init.Datatypes <> S constr
R8402:8404 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R8384:8386 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R8387:8387 Coq.Init.Datatypes <> S constr
prf 8437:8446 <> Forall_app
R8471:8474 Coq.Init.Datatypes <> list ind
R8476:8476 pure_lemmas <> A var
R8499:8503 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R8480:8485 Coq.Lists.List <> Forall ind
R8492:8495 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R8490:8491 pure_lemmas <> l1 var
R8496:8497 pure_lemmas <> l2 var
R8487:8487 pure_lemmas <> P var
R8515:8518 Coq.Init.Logic <> :type_scope:x_'/\'_x not
R8504:8509 Coq.Lists.List <> Forall ind
R8513:8514 pure_lemmas <> l1 var
R8511:8511 pure_lemmas <> P var
R8519:8524 Coq.Lists.List <> Forall ind
R8528:8529 pure_lemmas <> l2 var
R8526:8526 pure_lemmas <> P var
R0:-1 pure_lemmas <> y var
R0:-1 pure_lemmas <> y var
R0:-1 pure_lemmas <> y var
R0:-1 pure_lemmas <> y var
prf 8866:8878 <> firstn_firstn
R8904:8907 Coq.Init.Datatypes <> list ind
R8909:8909 pure_lemmas <> A var
R8945:8947 Coq.Init.Logic <> :type_scope:x_'='_x not
R8913:8918 Coq.Lists.List <> firstn def
R8924:8929 Coq.Lists.List <> firstn def
R8940:8943 pure_lemmas <> data var
R8934:8936 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R8932:8933 pure_lemmas <> lo var
R8937:8937 pure_lemmas <> n var
R8920:8921 pure_lemmas <> lo var
R8948:8953 Coq.Lists.List <> firstn def
R8958:8961 pure_lemmas <> data var
R8955:8956 pure_lemmas <> lo var
prf 9125:9136 <> skipn_firstn
R9162:9165 Coq.Init.Datatypes <> list ind
R9167:9167 pure_lemmas <> A var
R9202:9204 Coq.Init.Logic <> :type_scope:x_'='_x not
R9171:9175 Coq.Lists.List <> skipn def
R9181:9186 Coq.Lists.List <> firstn def
R9197:9200 pure_lemmas <> data var
R9191:9193 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R9189:9190 pure_lemmas <> lo var
R9194:9194 pure_lemmas <> n var
R9177:9178 pure_lemmas <> lo var
R9205:9210 Coq.Lists.List <> firstn def
R9215:9219 Coq.Lists.List <> skipn def
R9224:9227 pure_lemmas <> data var
R9221:9222 pure_lemmas <> lo var
R9212:9212 pure_lemmas <> n var
prf 9389:9399 <> Zlength_app
R9419:9422 Coq.Init.Datatypes <> list ind
R9424:9424 pure_lemmas <> T var
R9448:9450 Coq.Init.Logic <> :type_scope:x_'='_x not
R9432:9438 Coq.ZArith.Zcomplements <> Zlength def
R9443:9444 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R9441:9442 pure_lemmas <> al var
R9445:9446 pure_lemmas <> bl var
R9462:9464 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R9452:9458 Coq.ZArith.Zcomplements <> Zlength def
R9460:9461 pure_lemmas <> al var
R9465:9471 Coq.ZArith.Zcomplements <> Zlength def
R9473:9474 pure_lemmas <> bl var
R9515:9517 Coq.Init.Datatypes <> app def
R9528:9538 Coq.ZArith.Zcomplements <> Zlength_nil thm
R9515:9517 Coq.Init.Datatypes <> app def
R9528:9538 Coq.ZArith.Zcomplements <> Zlength_nil thm
R9555:9557 Coq.Init.Datatypes <> app def
R9575:9586 Coq.ZArith.Zcomplements <> Zlength_cons thm
R9555:9557 Coq.Init.Datatypes <> app def
R9575:9586 Coq.ZArith.Zcomplements <> Zlength_cons thm
R9575:9586 Coq.ZArith.Zcomplements <> Zlength_cons thm
R9575:9586 Coq.ZArith.Zcomplements <> Zlength_cons thm
prf 9621:9631 <> Zlength_rev
R9648:9651 Coq.Init.Datatypes <> list ind
R9653:9653 pure_lemmas <> T var
R9673:9675 Coq.Init.Logic <> :type_scope:x_'='_x not
R9657:9663 Coq.ZArith.Zcomplements <> Zlength def
R9666:9668 Coq.Lists.List <> rev def
R9670:9671 pure_lemmas <> vl var
R9676:9682 Coq.ZArith.Zcomplements <> Zlength def
R9684:9685 pure_lemmas <> vl var
R9730:9741 Coq.ZArith.Zcomplements <> Zlength_cons thm
R9730:9741 Coq.ZArith.Zcomplements <> Zlength_cons thm
R9769:9779 pure_lemmas <> Zlength_app thm
R9769:9779 pure_lemmas <> Zlength_app thm
R9790:9801 Coq.ZArith.Zcomplements <> Zlength_cons thm
R9790:9801 Coq.ZArith.Zcomplements <> Zlength_cons thm
R9812:9822 Coq.ZArith.Zcomplements <> Zlength_nil thm
R9812:9822 Coq.ZArith.Zcomplements <> Zlength_nil thm
prf 9844:9854 <> Zlength_map
R9877:9877 pure_lemmas <> B var
R9872:9872 pure_lemmas <> A var
R9900:9902 Coq.Init.Logic <> :type_scope:x_'='_x not
R9883:9889 Coq.ZArith.Zcomplements <> Zlength def
R9892:9894 Coq.Lists.List <> map def
R9898:9898 pure_lemmas <> l var
R9896:9896 pure_lemmas <> f var
R9903:9909 Coq.ZArith.Zcomplements <> Zlength def
R9911:9911 pure_lemmas <> l var
R9962:9973 Coq.ZArith.Zcomplements <> Zlength_cons thm
R9962:9973 Coq.ZArith.Zcomplements <> Zlength_cons thm
R9962:9973 Coq.ZArith.Zcomplements <> Zlength_cons thm
R9962:9973 Coq.ZArith.Zcomplements <> Zlength_cons thm
prf 10024:10040 <> divide_length_app
R10065:10068 Coq.Init.Datatypes <> list ind
R10070:10070 pure_lemmas <> A var
R10134:10134 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R10136:10138 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R10155:10155 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R10135:10135 pure_lemmas <> n var
R10139:10145 Coq.ZArith.Zcomplements <> Zlength def
R10150:10151 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R10148:10149 pure_lemmas <> al var
R10152:10153 pure_lemmas <> bl var
R10108:10108 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R10110:10112 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R10123:10123 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R10109:10109 pure_lemmas <> n var
R10113:10119 Coq.ZArith.Zcomplements <> Zlength def
R10121:10122 pure_lemmas <> bl var
R10081:10081 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R10083:10085 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R10096:10096 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R10082:10082 pure_lemmas <> n var
R10086:10092 Coq.ZArith.Zcomplements <> Zlength def
R10094:10095 pure_lemmas <> al var
R10198:10198 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R10198:10198 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R10215:10225 pure_lemmas <> Zlength_app thm
R10244:10260 Coq.ZArith.BinInt Z mul_add_distr_r thm
R10215:10225 pure_lemmas <> Zlength_app thm
R10244:10260 Coq.ZArith.BinInt Z mul_add_distr_r thm
prf 10282:10304 <> isbyte_intlist_to_Zlist
R10318:10323 Coq.Lists.List <> Forall ind
R10334:10349 SHA256 <> intlist_to_Zlist def
R10351:10351 pure_lemmas <> l var
R10325:10331 SHA256 <> isbyteZ def
R10460:10462 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R10421:10432 Integers Int unsigned def
R10435:10441 Integers Int and def
R10446:10453 Integers Int repr def
R10443:10443 pure_lemmas <> i var
R10460:10462 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R10421:10432 Integers Int unsigned def
R10435:10441 Integers Int and def
R10446:10453 Integers Int repr def
R10443:10443 pure_lemmas <> i var
R10490:10502 Coq.ZArith.BinInt Z lt_le_trans thm
R10490:10502 Coq.ZArith.BinInt Z lt_le_trans thm
R10512:10527 Integers Int and_interval thm
R10532:10539 Integers Int repr def
R10542:10547 Coq.ZArith.BinInt Z ones def
R10512:10527 Integers Int and_interval thm
R10532:10539 Integers Int repr def
R10542:10547 Coq.ZArith.BinInt Z ones def
R10563:10570 Integers Int size def
R10574:10581 Integers Int repr def
R10584:10589 Coq.ZArith.BinInt Z ones def
R10563:10570 Integers Int size def
R10574:10581 Integers Int repr def
R10584:10589 Coq.ZArith.BinInt Z ones def
R10612:10620 Coqlib <> Zmin_spec thm
R10612:10620 Coqlib <> Zmin_spec thm
R10655:10659 Coq.ZArith.Zpower <> two_p def
R10638:10647 Coq.ZArith.BinInt Z le_trans thm
R10655:10659 Coq.ZArith.Zpower <> two_p def
R10638:10647 Coq.ZArith.BinInt Z le_trans thm
R10671:10684 Coqlib <> two_p_monotone thm
R10671:10684 Coqlib <> two_p_monotone thm
R10713:10726 Integers Int size_range thm
R10713:10726 Integers Int size_range thm
R10778:10780 SHA256 <> Shr def
R10783:10789 SHA256 <> isbyteZ def
R10822:10839 Integers Int unsigned_range thm
R10822:10839 Integers Int unsigned_range thm
R10822:10839 Integers Int unsigned_range thm
R10822:10839 Integers Int unsigned_range thm
R10822:10839 Integers Int unsigned_range thm
R10822:10839 Integers Int unsigned_range thm
R10822:10839 Integers Int unsigned_range thm
R10822:10839 Integers Int unsigned_range thm
R10822:10839 Integers Int unsigned_range thm
R10822:10839 Integers Int unsigned_range thm
R10871:10883 Integers Int divu_pow2 thm
R10922:10928 Coq.Init.Logic <> eq_refl constr
R10908:10915 Integers Int repr def
R10888:10895 Integers Int repr def
R10899:10901 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R10871:10883 Integers Int divu_pow2 thm
R10922:10928 Coq.Init.Logic <> eq_refl constr
R10908:10915 Integers Int repr def
R10888:10895 Integers Int repr def
R10899:10901 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R10942:10949 Integers Int divu def
R10960:10976 Integers Int unsigned_repr thm
R10960:10976 Integers Int unsigned_repr thm
R10987:11003 Integers Int unsigned_repr thm
R10987:11003 Integers Int unsigned_repr thm
R11044:11063 Coq.ZArith.BinInt Z div_lt_upper_bound thm
R11044:11063 Coq.ZArith.BinInt Z div_lt_upper_bound thm
R11117:11127 Integers Int modulus def
R11101:11103 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R11096:11098 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R11101:11103 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R11096:11098 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R11117:11127 Integers Int modulus def
R11137:11154 Integers Int unsigned_range thm
R11137:11154 Integers Int unsigned_range thm
R11166:11168 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R11170:11172 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R11188:11203 Coq.ZArith.BinInt Z pow_pos_nonneg thm
R11166:11168 Coq.ZArith.BinInt <> :Z_scope:x_'<'_x not
R11170:11172 Coq.ZArith.BinInt <> :Z_scope:x_'^'_x not
R11188:11203 Coq.ZArith.BinInt Z pow_pos_nonneg thm
R11229:11245 Integers Int unsigned_repr thm
R11229:11245 Integers Int unsigned_repr thm
R11293:11301 Coq.ZArith.BinInt Z div_pos thm
R11293:11301 Coq.ZArith.BinInt Z div_pos thm
R11316:11333 Integers Int unsigned_range thm
R11316:11333 Integers Int unsigned_range thm
R11342:11361 Coq.ZArith.BinInt Z div_le_upper_bound thm
R11342:11361 Coq.ZArith.BinInt Z div_le_upper_bound thm
R11404:11404 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R11393:11403 Integers Int modulus def
R11376:11385 Coq.ZArith.BinInt Z le_trans thm
R11404:11404 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R11393:11403 Integers Int modulus def
R11376:11385 Coq.ZArith.BinInt Z le_trans thm
R11419:11436 Integers Int unsigned_range thm
R11419:11436 Integers Int unsigned_range thm
prf 11482:11505 <> isbyte_intlist_to_Zlist'
R11522:11527 Coq.Lists.List <> Forall ind
R11538:11540 Coq.Lists.List <> map def
R11556:11558 Coq.Lists.List <> map def
R11570:11585 SHA256 <> intlist_to_Zlist def
R11587:11587 pure_lemmas <> l var
R11560:11567 Integers Int repr def
R11542:11553 Integers Int unsigned def
R11529:11535 SHA256 <> isbyteZ def
R11616:11618 Coq.Lists.List <> map def
R11634:11636 Coq.Lists.List <> map def
R11648:11663 SHA256 <> intlist_to_Zlist def
R11638:11645 Integers Int repr def
R11620:11631 Integers Int unsigned def
R11676:11691 SHA256 <> intlist_to_Zlist def
R11676:11691 SHA256 <> intlist_to_Zlist def
R11616:11618 Coq.Lists.List <> map def
R11634:11636 Coq.Lists.List <> map def
R11648:11663 SHA256 <> intlist_to_Zlist def
R11638:11645 Integers Int repr def
R11620:11631 Integers Int unsigned def
R11703:11725 pure_lemmas <> isbyte_intlist_to_Zlist thm
R11703:11725 pure_lemmas <> isbyte_intlist_to_Zlist thm
R11792:11808 Integers Int repr_unsigned thm
R11792:11808 Integers Int repr_unsigned thm
R11792:11808 Integers Int repr_unsigned thm
R11792:11808 Integers Int repr_unsigned thm
R11792:11808 Integers Int repr_unsigned thm
prf 11823:11849 <> Forall_isbyte_repr_unsigned
R11863:11866 Coq.Init.Datatypes <> list ind
R11868:11870 Integers <> int syndef
R11906:11908 Coq.Init.Logic <> :type_scope:x_'='_x not
R11873:11875 Coq.Lists.List <> map def
R11887:11889 Coq.Lists.List <> map def
R11904:11904 pure_lemmas <> l var
R11891:11902 Integers Int unsigned def
R11877:11884 Integers Int repr def
R11909:11909 pure_lemmas <> l var
R11981:11997 Integers Int repr_unsigned thm
R11981:11997 Integers Int repr_unsigned thm
prf 12012:12035 <> map_unsigned_repr_isbyte
R12051:12054 Coq.Init.Datatypes <> list ind
R12056:12056 Coq.Numbers.BinNums <> Z ind
R12113:12115 Coq.Init.Logic <> :type_scope:x_'='_x not
R12080:12082 Coq.Lists.List <> map def
R12098:12100 Coq.Lists.List <> map def
R12111:12111 pure_lemmas <> l var
R12102:12109 Integers Int repr def
R12084:12095 Integers Int unsigned def
R12116:12116 pure_lemmas <> l var
R12060:12065 Coq.Lists.List <> Forall ind
R12075:12075 pure_lemmas <> l var
R12067:12073 SHA256 <> isbyteZ def
R12191:12197 SHA256 <> isbyteZ def
R12212:12228 Integers Int unsigned_repr thm
R12212:12228 Integers Int unsigned_repr thm
R12257:12259 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R12241:12256 Integers Int max_unsigned def
R12257:12259 Coq.ZArith.BinInt <> :Z_scope:x_'>'_x not
R12241:12256 Integers Int max_unsigned def
prf 12313:12328 <> int_unsigned_inj
R12379:12379 Coq.Init.Logic <> :type_scope:x_'='_x not
R12378:12378 pure_lemmas <> a var
R12380:12380 pure_lemmas <> b var
R12357:12359 Coq.Init.Logic <> :type_scope:x_'='_x not
R12343:12354 Integers Int unsigned def
R12356:12356 pure_lemmas <> a var
R12360:12371 Integers Int unsigned def
R12373:12373 pure_lemmas <> b var
R12410:12426 Integers Int repr_unsigned thm
R12444:12460 Integers Int repr_unsigned thm
R12410:12426 Integers Int repr_unsigned thm
R12444:12460 Integers Int repr_unsigned thm
prf 12490:12509 <> intlist_to_Zlist_inj
R12573:12573 Coq.Init.Logic <> :type_scope:x_'='_x not
R12571:12572 pure_lemmas <> al var
R12574:12575 pure_lemmas <> bl var
R12545:12547 Coq.Init.Logic <> :type_scope:x_'='_x not
R12526:12541 SHA256 <> intlist_to_Zlist def
R12543:12544 pure_lemmas <> al var
R12548:12563 SHA256 <> intlist_to_Zlist def
R12565:12566 pure_lemmas <> bl var
R12732:12747 pure_lemmas <> int_unsigned_inj thm
R12732:12747 pure_lemmas <> int_unsigned_inj thm
R12762:12777 pure_lemmas <> int_unsigned_inj thm
R12762:12777 pure_lemmas <> int_unsigned_inj thm
R12792:12807 pure_lemmas <> int_unsigned_inj thm
R12792:12807 pure_lemmas <> int_unsigned_inj thm
R12822:12837 pure_lemmas <> int_unsigned_inj thm
R12822:12837 pure_lemmas <> int_unsigned_inj thm
R12853:12855 SHA256 <> Shr def
R12869:12884 Integers Int same_bits_eq thm
R12869:12884 Integers Int same_bits_eq thm
R12916:12916 Coq.Init.Logic <> :type_scope:x_'='_x not
R12903:12915 Integers Int zwordsize def
R12916:12916 Coq.Init.Logic <> :type_scope:x_'='_x not
R12903:12915 Integers Int zwordsize def
R12958:12963 Coq.ZArith.BinInt Z ones def
R12958:12963 Coq.ZArith.BinInt Z ones def
R12984:12986 Coqlib <> zlt def
R12984:12986 Coqlib <> zlt def
R13008:13018 Integers Int testbit def
R13021:13027 Integers Int and def
R13032:13039 Integers Int repr def
R13042:13047 Coq.ZArith.BinInt Z ones def
R13008:13018 Integers Int testbit def
R13021:13027 Integers Int and def
R13032:13039 Integers Int repr def
R13042:13047 Coq.ZArith.BinInt Z ones def
R13144:13146 Coqlib <> zlt def
R13144:13146 Coqlib <> zlt def
R13169:13179 Integers Int testbit def
R13241:13241 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R13182:13188 Integers Int and def
R13217:13224 Integers Int repr def
R13227:13232 Coq.ZArith.BinInt Z ones def
R13191:13198 Integers Int shru def
R13203:13210 Integers Int repr def
R13169:13179 Integers Int testbit def
R13241:13241 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R13182:13188 Integers Int and def
R13217:13224 Integers Int repr def
R13227:13232 Coq.ZArith.BinInt Z ones def
R13191:13198 Integers Int shru def
R13203:13210 Integers Int repr def
R13281:13292 Integers Int unsigned def
R13295:13302 Integers Int repr def
R13281:13292 Integers Int unsigned def
R13295:13302 Integers Int repr def
R13326:13334 Coq.ZArith.BinInt Z sub_add thm
R13326:13334 Coq.ZArith.BinInt Z sub_add thm
R13389:13397 Coq.ZArith.BinInt Z sub_add thm
R13389:13397 Coq.ZArith.BinInt Z sub_add thm
R13416:13418 Coqlib <> zlt def
R13416:13418 Coqlib <> zlt def
R13441:13451 Integers Int testbit def
R13514:13514 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R13454:13460 Integers Int and def
R13490:13497 Integers Int repr def
R13500:13505 Coq.ZArith.BinInt Z ones def
R13463:13470 Integers Int shru def
R13475:13482 Integers Int repr def
R13441:13451 Integers Int testbit def
R13514:13514 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R13454:13460 Integers Int and def
R13490:13497 Integers Int repr def
R13500:13505 Coq.ZArith.BinInt Z ones def
R13463:13470 Integers Int shru def
R13475:13482 Integers Int repr def
R13555:13566 Integers Int unsigned def
R13569:13576 Integers Int repr def
R13555:13566 Integers Int unsigned def
R13569:13576 Integers Int repr def
R13602:13610 Coq.ZArith.BinInt Z sub_add thm
R13602:13610 Coq.ZArith.BinInt Z sub_add thm
R13665:13676 Integers Int unsigned def
R13679:13686 Integers Int repr def
R13665:13676 Integers Int unsigned def
R13679:13686 Integers Int repr def
R13712:13720 Coq.ZArith.BinInt Z sub_add thm
R13712:13720 Coq.ZArith.BinInt Z sub_add thm
R13743:13753 Integers Int testbit def
R13784:13784 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R13756:13763 Integers Int shru def
R13768:13775 Integers Int repr def
R13743:13753 Integers Int testbit def
R13784:13784 Coq.ZArith.BinInt <> :Z_scope:x_'-'_x not
R13756:13763 Integers Int shru def
R13768:13775 Integers Int repr def
R13825:13836 Integers Int unsigned def
R13839:13846 Integers Int repr def
R13825:13836 Integers Int unsigned def
R13839:13846 Integers Int repr def
R13872:13880 Coq.ZArith.BinInt Z sub_add thm
R13872:13880 Coq.ZArith.BinInt Z sub_add thm
R13935:13946 Integers Int unsigned def
R13949:13956 Integers Int repr def
R13935:13946 Integers Int unsigned def
R13949:13956 Integers Int repr def
R13982:13990 Coq.ZArith.BinInt Z sub_add thm
R13982:13990 Coq.ZArith.BinInt Z sub_add thm
prf 14011:14038 <> Zlength_intlist_to_Zlist_app
R14092:14098 Coq.Init.Logic <> :type_scope:x_'='_x not
R14057:14063 Coq.ZArith.Zcomplements <> Zlength def
R14066:14081 SHA256 <> intlist_to_Zlist def
R14086:14087 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R14084:14085 pure_lemmas <> al var
R14088:14089 pure_lemmas <> bl var
R14129:14131 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14100:14106 Coq.ZArith.Zcomplements <> Zlength def
R14109:14124 SHA256 <> intlist_to_Zlist def
R14126:14127 pure_lemmas <> al var
R14132:14138 Coq.ZArith.Zcomplements <> Zlength def
R14141:14156 SHA256 <> intlist_to_Zlist def
R14158:14159 pure_lemmas <> bl var
R14223:14234 Coq.ZArith.Zcomplements <> Zlength_cons thm
R14223:14234 Coq.ZArith.Zcomplements <> Zlength_cons thm
R14223:14234 Coq.ZArith.Zcomplements <> Zlength_cons thm
R14223:14234 Coq.ZArith.Zcomplements <> Zlength_cons thm
R14223:14234 Coq.ZArith.Zcomplements <> Zlength_cons thm
R14223:14234 Coq.ZArith.Zcomplements <> Zlength_cons thm
R14223:14234 Coq.ZArith.Zcomplements <> Zlength_cons thm
R14223:14234 Coq.ZArith.Zcomplements <> Zlength_cons thm
R14223:14234 Coq.ZArith.Zcomplements <> Zlength_cons thm
R14223:14234 Coq.ZArith.Zcomplements <> Zlength_cons thm
prf 14270:14282 <> Forall_firstn
R14300:14300 pure_lemmas <> A var
R14330:14335 Coq.Lists.List <> Forall ind
R14340:14345 Coq.Lists.List <> firstn def
R14349:14349 pure_lemmas <> l var
R14347:14347 pure_lemmas <> n var
R14337:14337 pure_lemmas <> f var
R14316:14321 Coq.Lists.List <> Forall ind
R14325:14325 pure_lemmas <> l var
R14323:14323 pure_lemmas <> f var
prf 14477:14488 <> Forall_skipn
R14506:14506 pure_lemmas <> A var
R14536:14541 Coq.Lists.List <> Forall ind
R14546:14550 Coq.Lists.List <> skipn def
R14554:14554 pure_lemmas <> l var
R14552:14552 pure_lemmas <> n var
R14543:14543 pure_lemmas <> f var
R14522:14527 Coq.Lists.List <> Forall ind
R14531:14531 pure_lemmas <> l var
R14529:14529 pure_lemmas <> f var
prf 14704:14711 <> add_repr
R14759:14761 Coq.Init.Logic <> :type_scope:x_'='_x not
R14726:14732 Integers Int add def
R14748:14755 Integers Int repr def
R14757:14757 pure_lemmas <> j var
R14735:14742 Integers Int repr def
R14744:14744 pure_lemmas <> i var
R14762:14769 Integers Int repr def
R14773:14773 Coq.ZArith.BinInt <> :Z_scope:x_'+'_x not
R14772:14772 pure_lemmas <> i var
R14774:14774 pure_lemmas <> j var
R14803:14818 Integers Int add_unsigned thm
R14803:14818 Integers Int add_unsigned thm
R14828:14843 Integers Int eqm_samerepr thm
R14828:14843 Integers Int eqm_samerepr thm
R14854:14860 Integers Int eqm def
R14870:14880 Integers Int eqm_add thm
R14889:14899 Integers Int eqm_sym thm
R14908:14928 Integers Int eqm_unsigned_repr thm
R14870:14880 Integers Int eqm_add thm
R14889:14899 Integers Int eqm_sym thm
R14889:14899 Integers Int eqm_sym thm
R14908:14928 Integers Int eqm_unsigned_repr thm
R14908:14928 Integers Int eqm_unsigned_repr thm
prf 14943:14950 <> mul_repr
R14999:15001 Coq.Init.Logic <> :type_scope:x_'='_x not
R14966:14972 Integers Int mul def
R14988:14995 Integers Int repr def
R14997:14997 pure_lemmas <> y var
R14975:14982 Integers Int repr def
R14984:14984 pure_lemmas <> x var
R15002:15009 Integers Int repr def
R15013:15015 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R15012:15012 pure_lemmas <> x var
R15016:15016 pure_lemmas <> y var
R15042:15048 Integers Int mul def
R15057:15072 Integers Int eqm_samerepr thm
R15057:15072 Integers Int eqm_samerepr thm
R15090:15109 Integers Int unsigned_repr_eq thm
R15090:15109 Integers Int unsigned_repr_eq thm
R15090:15109 Integers Int unsigned_repr_eq thm
R15090:15109 Integers Int unsigned_repr_eq thm
R15118:15129 Integers Int eqm_mult thm
R15139:15145 Integers Int eqm def
R15154:15166 Integers Int eqmod_sym thm
R15175:15187 Integers Int eqmod_mod thm
R15118:15129 Integers Int eqm_mult thm
R15154:15166 Integers Int eqmod_sym thm
R15154:15166 Integers Int eqmod_sym thm
R15175:15187 Integers Int eqmod_mod thm
R15175:15187 Integers Int eqmod_mod thm
prf 15223:15232 <> hilo_lemma
R15311:15313 Coq.Init.Logic <> :type_scope:x_'='_x not
R15251:15251 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R15287:15288 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R15310:15310 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R15289:15296 Integers Int repr def
R15299:15302 SHA256 <> hilo def
R15307:15308 pure_lemmas <> lo var
R15304:15305 pure_lemmas <> hi var
R15252:15259 Integers Int repr def
R15272:15274 Coq.ZArith.BinInt <> :Z_scope:x_'/'_x not
R15262:15265 SHA256 <> hilo def
R15270:15271 pure_lemmas <> lo var
R15267:15268 pure_lemmas <> hi var
R15275:15285 Integers Int modulus def
R15314:15314 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R15317:15318 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R15321:15321 SHA256 <> ::'['_x_','_'..'_','_x_']' not
R15319:15320 pure_lemmas <> lo var
R15315:15316 pure_lemmas <> hi var
R15338:15341 SHA256 <> hilo def
R15360:15370 Coq.ZArith.BinInt Z div_add_l thm
R15360:15370 Coq.ZArith.BinInt Z div_add_l thm
R15426:15443 Integers Int unsigned_range thm
R15406:15415 Coqlib <> Zdiv_small thm
R15406:15415 Coqlib <> Zdiv_small thm
R15426:15443 Integers Int unsigned_range thm
R15454:15462 Coq.ZArith.BinInt Z add_0_r thm
R15454:15462 Coq.ZArith.BinInt Z add_0_r thm
R15473:15489 Integers Int repr_unsigned thm
R15473:15489 Integers Int repr_unsigned thm
R15521:15528 pure_lemmas <> add_repr thm
R15521:15528 pure_lemmas <> add_repr thm
R15542:15549 pure_lemmas <> mul_repr thm
R15542:15549 pure_lemmas <> mul_repr thm
R15561:15568 Integers Int repr def
R15570:15580 Integers Int modulus def
R15589:15596 Integers Int repr def
R15589:15596 Integers Int repr def
R15561:15568 Integers Int repr def
R15570:15580 Integers Int modulus def
R15610:15621 Integers Int mul_zero thm
R15610:15621 Integers Int mul_zero thm
R15632:15645 Integers Int add_zero_l thm
R15632:15645 Integers Int add_zero_l thm
R15654:15670 Integers Int repr_unsigned thm
R15654:15670 Integers Int repr_unsigned thm
R15679:15694 Integers Int eqm_samerepr thm
R15679:15694 Integers Int eqm_samerepr thm
R15704:15710 Integers Int eqm def
R15739:15743 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R15728:15738 Integers Int modulus def
R15744:15754 Integers Int modulus def
R15739:15743 Coq.ZArith.BinInt <> :Z_scope:x_'mod'_x not
R15728:15738 Integers Int modulus def
R15744:15754 Integers Int modulus def
R15764:15776 Integers Int eqmod_sym thm
R15764:15776 Integers Int eqmod_sym thm
R15785:15797 Integers Int eqmod_mod thm
R15785:15797 Integers Int eqmod_mod thm
prf 15833:15860 <> Forall_isbyteZ_unsigned_repr
R15894:15899 Coq.Lists.List <> Forall ind
R15910:15912 Coq.Lists.List <> map def
R15928:15930 Coq.Lists.List <> map def
R15941:15941 pure_lemmas <> l var
R15932:15939 Integers Int repr def
R15914:15925 Integers Int unsigned def
R15901:15907 SHA256 <> isbyteZ def
R15874:15879 Coq.Lists.List <> Forall ind
R15889:15889 pure_lemmas <> l var
R15881:15887 SHA256 <> isbyteZ def
R16000:16016 Integers Int unsigned_repr thm
R16000:16016 Integers Int unsigned_repr thm
R16032:16038 SHA256 <> isbyteZ def
prf 16090:16102 <> divide_hashed
R16118:16121 Coq.Init.Datatypes <> list ind
R16123:16125 Integers <> int syndef
R16166:16174 Coq.Init.Logic <> :type_scope:x_'<->'_x not
R16134:16146 Coq.Numbers.Natural.Peano.NPeano <> divide def
R16156:16161 Coq.Init.Datatypes <> length def
R16163:16164 pure_lemmas <> bb var
R16148:16153 pure_lemmas <> LBLOCK def
R16175:16175 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R16183:16185 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R16196:16196 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R16176:16182 SHA256 <> LBLOCKz def
R16186:16192 Coq.ZArith.Zcomplements <> Zlength def
R16194:16195 pure_lemmas <> bb var
R16243:16250 Coq.ZArith.BinInt Z of_nat def
R16243:16250 Coq.ZArith.BinInt Z of_nat def
R16264:16278 Coq.ZArith.Zcomplements <> Zlength_correct thm
R16264:16278 Coq.ZArith.Zcomplements <> Zlength_correct thm
R16292:16304 Coq.ZArith.Znat Nat2Z inj_mul thm
R16292:16304 Coq.ZArith.Znat Nat2Z inj_mul thm
R16321:16328 Coq.ZArith.BinInt Z to_nat def
R16321:16328 Coq.ZArith.BinInt Z to_nat def
R16342:16356 Coq.ZArith.Zcomplements <> Zlength_correct thm
R16342:16356 Coq.ZArith.Zcomplements <> Zlength_correct thm
R16373:16376 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R16373:16376 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R16390:16393 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R16395:16397 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16398:16404 SHA256 <> LBLOCKz def
R16390:16393 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R16395:16397 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16398:16404 SHA256 <> LBLOCKz def
R16423:16443 Coq.ZArith.BinInt Z mul_nonneg_cancel_r thm
R16423:16443 Coq.ZArith.BinInt Z mul_nonneg_cancel_r thm
R16470:16477 Coq.ZArith.Znat Z2Nat id thm
R16481:16481 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16482:16488 SHA256 <> LBLOCKz def
R16470:16477 Coq.ZArith.Znat Z2Nat id thm
R16481:16481 Coq.ZArith.BinInt <> :Z_scope:x_'*'_x not
R16482:16488 SHA256 <> LBLOCKz def
R16515:16523 Coq.ZArith.Znat Nat2Z inj thm
R16515:16523 Coq.ZArith.Znat Nat2Z inj thm
R16562:16569 Coq.ZArith.BinInt Z to_nat def
R16571:16577 SHA256 <> LBLOCKz def
R16549:16554 pure_lemmas <> LBLOCK def
R16549:16554 pure_lemmas <> LBLOCK def
R16562:16569 Coq.ZArith.BinInt Z to_nat def
R16571:16577 SHA256 <> LBLOCKz def
R16589:16601 Coq.ZArith.Znat Z2Nat inj_mul thm
R16589:16601 Coq.ZArith.Znat Z2Nat inj_mul thm
prf 16622:16642 <> hash_blocks_equation'
R16658:16666 SHA256 <> registers def
R16676:16679 Coq.Init.Datatypes <> list ind
R16681:16683 Integers <> int syndef
R16711:16720 Coq.Init.Logic <> :type_scope:x_'='_x not
R16694:16704 SHA256 <> hash_blocks thm
R16708:16710 pure_lemmas <> msg var
R16706:16706 pure_lemmas <> r var
R16727:16729 pure_lemmas <> msg var
R16745:16746 SHA256 <> ::'['_']' not
R16751:16751 pure_lemmas <> r var
R16763:16766 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R16772:16782 SHA256 <> hash_blocks thm
R16820:16824 Coq.Lists.List <> skipn def
R16833:16835 pure_lemmas <> msg var
R16826:16831 pure_lemmas <> LBLOCK def
R16785:16794 SHA256 <> hash_block def
R16799:16804 Coq.Lists.List <> firstn def
R16813:16815 pure_lemmas <> msg var
R16806:16811 pure_lemmas <> LBLOCK def
R16796:16796 pure_lemmas <> r var
R16863:16882 SHA256 <> hash_blocks_equation thm
R16863:16882 SHA256 <> hash_blocks_equation thm
prf 16897:16905 <> CBLOCK_eq
R16914:16914 Coq.Init.Logic <> :type_scope:x_'='_x not
R16908:16913 pure_lemmas <> CBLOCK def
prf 16954:16962 <> LBLOCK_eq
R16971:16971 Coq.Init.Logic <> :type_scope:x_'='_x not
R16965:16970 pure_lemmas <> LBLOCK def
prf 17012:17027 <> hash_blocks_last
R17190:17192 Coq.Init.Logic <> :type_scope:x_'='_x not
R17159:17168 SHA256 <> hash_block def
R17189:17189 pure_lemmas <> c var
R17171:17181 SHA256 <> hash_blocks thm
R17185:17186 pure_lemmas <> bl var
R17183:17183 pure_lemmas <> a var
R17193:17203 SHA256 <> hash_blocks thm
R17210:17212 Coq.Init.Datatypes <> :list_scope:x_'++'_x not
R17208:17209 pure_lemmas <> bl var
R17213:17213 pure_lemmas <> c var
R17205:17205 pure_lemmas <> a var
R17142:17144 Coq.Init.Logic <> :type_scope:x_'='_x not
R17133:17139 Coq.ZArith.Zcomplements <> Zlength def
R17141:17141 pure_lemmas <> c var
R17145:17151 SHA256 <> LBLOCKz def
R17092:17092 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R17100:17102 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R17113:17113 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R17093:17099 SHA256 <> LBLOCKz def
R17103:17109 Coq.ZArith.Zcomplements <> Zlength def
R17111:17112 pure_lemmas <> bl var
R17070:17072 Coq.Init.Logic <> :type_scope:x_'='_x not
R17061:17067 Coq.ZArith.Zcomplements <> Zlength def
R17069:17069 pure_lemmas <> a var
R17247:17249 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R17250:17255 pure_lemmas <> LBLOCK def
R17275:17283 pure_lemmas <> LBLOCK_eq thm
R17247:17249 Coq.Init.Peano <> :nat_scope:x_'<'_x not
R17250:17255 pure_lemmas <> LBLOCK def
R17275:17283 pure_lemmas <> LBLOCK_eq thm
R17300:17312 pure_lemmas <> divide_hashed thm
R17300:17312 pure_lemmas <> divide_hashed thm
R17351:17365 Coq.ZArith.Zcomplements <> Zlength_correct thm
R17351:17365 Coq.ZArith.Zcomplements <> Zlength_correct thm
R17391:17398 Coq.ZArith.BinInt Z of_nat def
R17391:17398 Coq.ZArith.BinInt Z of_nat def
R17467:17474 Coq.ZArith.BinInt Z of_nat def
R17476:17481 pure_lemmas <> LBLOCK def
R17453:17459 SHA256 <> LBLOCKz def
R17453:17459 SHA256 <> LBLOCKz def
R17467:17474 Coq.ZArith.BinInt Z of_nat def
R17476:17481 pure_lemmas <> LBLOCK def
R17497:17505 Coq.ZArith.Znat Nat2Z inj thm
R17497:17505 Coq.ZArith.Znat Nat2Z inj thm
R17520:17528 Coq.ZArith.Znat Nat2Z inj thm
R17520:17528 Coq.ZArith.Znat Nat2Z inj thm
R17605:17625 pure_lemmas <> hash_blocks_equation' thm
R17605:17625 pure_lemmas <> hash_blocks_equation' thm
R17644:17664 pure_lemmas <> hash_blocks_equation' thm
R17644:17664 pure_lemmas <> hash_blocks_equation' thm
R17739:17749 common_lemmas <> firstn_same thm
R17739:17749 common_lemmas <> firstn_same thm
R17770:17774 Coq.Lists.List <> skipn def
R17776:17781 pure_lemmas <> LBLOCK def
R17793:17795 Coq.Init.Datatypes <> nil constr
R17797:17799 Integers <> int syndef
R17793:17795 Coq.Init.Datatypes <> nil constr
R17797:17799 Integers <> int syndef
R17770:17774 Coq.Lists.List <> skipn def
R17776:17781 pure_lemmas <> LBLOCK def
R17811:17831 pure_lemmas <> hash_blocks_equation' thm
R17811:17831 pure_lemmas <> hash_blocks_equation' thm
R17859:17870 SHA256 <> skipn_length thm
R17872:17877 pure_lemmas <> LBLOCK def
R17859:17870 SHA256 <> skipn_length thm
R17872:17877 pure_lemmas <> LBLOCK def
R17931:17935 Coq.Lists.List <> skipn def
R17937:17942 pure_lemmas <> LBLOCK def
R17931:17935 Coq.Lists.List <> skipn def
R17937:17942 pure_lemmas <> LBLOCK def
R17985:17987 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R17982:17982 Coq.Init.Datatypes <> S constr
R17988:17993 pure_lemmas <> LBLOCK def
R18016:18018 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R18007:18009 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R18010:18015 pure_lemmas <> LBLOCK def
R18019:18024 pure_lemmas <> LBLOCK def
R18016:18018 Coq.Init.Peano <> :nat_scope:x_'+'_x not
R18007:18009 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R18010:18015 pure_lemmas <> LBLOCK def
R18019:18024 pure_lemmas <> LBLOCK def
R17985:17987 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R17982:17982 Coq.Init.Datatypes <> S constr
R17988:17993 pure_lemmas <> LBLOCK def
R18067:18087 pure_lemmas <> hash_blocks_equation' thm
R18067:18087 pure_lemmas <> hash_blocks_equation' thm
R18136:18137 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R18136:18137 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R18213:18232 SHA256 <> hash_blocks_equation thm
R18213:18232 SHA256 <> hash_blocks_equation thm
R18279:18281 Coq.Init.Datatypes <> app def
R18294:18296 Coq.Init.Datatypes <> app def
R18294:18296 Coq.Init.Datatypes <> app def
R18308:18309 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R18308:18309 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R18378:18388 common_lemmas <> firstn_app1 thm
R18378:18388 common_lemmas <> firstn_app1 thm
R18408:18417 common_lemmas <> skipn_app1 thm
R18408:18417 common_lemmas <> skipn_app1 thm
R18437:18453 common_lemmas <> length_hash_block thm
R18437:18453 common_lemmas <> length_hash_block thm
R18493:18498 pure_lemmas <> LBLOCK def
R18493:18498 pure_lemmas <> LBLOCK def
R18509:18521 Coq.Lists.List <> firstn_length thm
R18509:18521 Coq.Lists.List <> firstn_length thm
R18530:18534 Coq.Init.Peano <> min_l thm
R18530:18534 Coq.Init.Peano <> min_l thm
R18556:18567 SHA256 <> skipn_length thm
R18556:18567 SHA256 <> skipn_length thm
R18592:18597 pure_lemmas <> LBLOCK def
R18576:18585 Coq.Arith.Plus <> plus_reg_l thm
R18592:18597 pure_lemmas <> LBLOCK def
R18576:18585 Coq.Arith.Plus <> plus_reg_l thm
R18608:18616 Coq.Arith.Plus <> plus_comm thm
R18608:18616 Coq.Arith.Plus <> plus_comm thm
R18628:18645 Coq.Numbers.Natural.Peano.NPeano Nat sub_add thm
R18628:18645 Coq.Numbers.Natural.Peano.NPeano Nat sub_add thm
R18716:18719 Coq.Init.Peano <> :nat_scope:x_'>='_x not
R18709:18709 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R18710:18715 pure_lemmas <> LBLOCK def
R18716:18719 Coq.Init.Peano <> :nat_scope:x_'>='_x not
R18709:18709 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R18710:18715 pure_lemmas <> LBLOCK def
R18743:18745 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R18746:18751 pure_lemmas <> LBLOCK def
R18743:18745 Coq.Init.Peano <> :nat_scope:x_'*'_x not
R18746:18751 pure_lemmas <> LBLOCK def
prf 18796:18813 <> length_hash_blocks
R18927:18929 Coq.Init.Logic <> :type_scope:x_'='_x not
R18895:18900 Coq.Init.Datatypes <> length def
R18903:18913 SHA256 <> hash_blocks thm
R18920:18925 pure_lemmas <> blocks var
R18915:18918 pure_lemmas <> regs var
R18863:18863 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R18871:18873 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R18888:18888 Coq.ZArith.BinInt <> :Z_scope:'('_x_'|'_x_')' not
R18864:18870 SHA256 <> LBLOCKz def
R18874:18880 Coq.ZArith.Zcomplements <> Zlength def
R18882:18887 pure_lemmas <> blocks var
R18849:18851 Coq.Init.Logic <> :type_scope:x_'='_x not
R18838:18843 Coq.Init.Datatypes <> length def
R18845:18848 pure_lemmas <> regs var
R18982:18996 Coq.ZArith.Zcomplements <> Zlength_correct thm
R18982:18996 Coq.ZArith.Zcomplements <> Zlength_correct thm
R19020:19030 pure_lemmas <> LBLOCKz_pos thm
R19020:19030 pure_lemmas <> LBLOCKz_pos thm
R19055:19062 Coq.ZArith.BinInt Z of_nat def
R19064:19069 pure_lemmas <> LBLOCK def
R19041:19047 SHA256 <> LBLOCKz def
R19041:19047 SHA256 <> LBLOCKz def
R19055:19062 Coq.ZArith.BinInt Z of_nat def
R19064:19069 pure_lemmas <> LBLOCK def
R19123:19143 Coq.ZArith.BinInt Z mul_nonneg_cancel_r thm
R19090:19097 Coq.ZArith.Znat Z2Nat id thm
R19090:19097 Coq.ZArith.Znat Z2Nat id thm
R19123:19143 Coq.ZArith.BinInt Z mul_nonneg_cancel_r thm
R19182:19194 Coq.ZArith.Znat Nat2Z inj_mul thm
R19182:19194 Coq.ZArith.Znat Nat2Z inj_mul thm
R19209:19217 Coq.ZArith.Znat Nat2Z inj thm
R19209:19217 Coq.ZArith.Znat Nat2Z inj thm
R19262:19269 Coq.ZArith.BinInt Z to_nat def
R19262:19269 Coq.ZArith.BinInt Z to_nat def
R19318:19338 pure_lemmas <> hash_blocks_equation' thm
R19318:19338 pure_lemmas <> hash_blocks_equation' thm
R19373:19378 pure_lemmas <> LBLOCK def
R19406:19426 pure_lemmas <> hash_blocks_equation' thm
R19406:19426 pure_lemmas <> hash_blocks_equation' thm
R19444:19445 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R19444:19445 Coq.Init.Datatypes <> :list_scope:x_'::'_x not
R19485:19501 common_lemmas <> length_hash_block thm
R19485:19501 common_lemmas <> length_hash_block thm
R19541:19546 pure_lemmas <> LBLOCK def
R19541:19546 pure_lemmas <> LBLOCK def
R19557:19569 Coq.Lists.List <> firstn_length thm
R19557:19569 Coq.Lists.List <> firstn_length thm
R19578:19582 Coq.Init.Peano <> min_l thm
R19578:19582 Coq.Init.Peano <> min_l thm
R19617:19628 SHA256 <> skipn_length thm
R19617:19628 SHA256 <> skipn_length thm
R19672:19680 Coq.Arith.Plus <> plus_comm thm
R19672:19680 Coq.Arith.Plus <> plus_comm thm
R19691:19708 Coq.Numbers.Natural.Peano.NPeano Nat add_sub thm
R19691:19708 Coq.Numbers.Natural.Peano.NPeano Nat add_sub thm
prf 19778:19792 <> nth_list_repeat
R19812:19812 pure_lemmas <> A var
R19845:19847 Coq.Init.Logic <> :type_scope:x_'='_x not
R19820:19822 Coq.Lists.List <> nth def
R19844:19844 pure_lemmas <> x var
R19827:19837 Coqlib <> list_repeat def
R19841:19841 pure_lemmas <> x var
R19839:19839 pure_lemmas <> n var
R19824:19824 pure_lemmas <> i var
R19848:19848 pure_lemmas <> x var
prf 19909:19923 <> map_list_repeat
R19948:19948 pure_lemmas <> B var
R19943:19943 pure_lemmas <> A var
R19984:19986 Coq.Init.Logic <> :type_scope:x_'='_x not
R19961:19963 Coq.Lists.List <> map def
R19968:19978 Coqlib <> list_repeat def
R19982:19982 pure_lemmas <> x var
R19980:19980 pure_lemmas <> n var
R19965:19965 pure_lemmas <> f var
R19987:19997 Coqlib <> list_repeat def
R20002:20002 pure_lemmas <> f var
R20004:20004 pure_lemmas <> x var
R19999:19999 pure_lemmas <> n var
prf 20070:20087 <> Forall_list_repeat
R20105:20105 pure_lemmas <> A var
R20122:20122 pure_lemmas <> A var
R20138:20143 Coq.Lists.List <> Forall ind
R20148:20158 Coqlib <> list_repeat def
R20162:20162 pure_lemmas <> x var
R20160:20160 pure_lemmas <> n var
R20145:20145 pure_lemmas <> f var
R20131:20131 pure_lemmas <> f var
R20133:20133 pure_lemmas <> x var
prf 20220:20233 <> ZtoNat_Zlength
R20253:20256 Coq.Init.Datatypes <> list ind
R20258:20258 pure_lemmas <> A var
R20282:20284 Coq.Init.Logic <> :type_scope:x_'='_x not
R20262:20269 Coq.ZArith.BinInt Z to_nat def
R20272:20278 Coq.ZArith.Zcomplements <> Zlength def
R20280:20280 pure_lemmas <> l var
R20285:20290 Coq.Init.Datatypes <> length def
R20292:20292 pure_lemmas <> l var
R20318:20332 Coq.ZArith.Zcomplements <> Zlength_correct thm
R20318:20332 Coq.ZArith.Zcomplements <> Zlength_correct thm
R20341:20348 Coq.ZArith.Znat Nat2Z id thm
R20341:20348 Coq.ZArith.Znat Nat2Z id thm
R20370:20383 pure_lemmas <> ZtoNat_Zlength thm
prf 20400:20413 <> Zlength_nonneg
R20432:20435 Coq.Init.Datatypes <> list ind
R20437:20437 pure_lemmas <> A var
R20442:20445 Coq.ZArith.BinInt <> :Z_scope:x_'<='_x not
R20446:20452 Coq.ZArith.Zcomplements <> Zlength def
R20454:20454 pure_lemmas <> l var
R20480:20494 Coq.ZArith.Zcomplements <> Zlength_correct thm
R20480:20494 Coq.ZArith.Zcomplements <> Zlength_correct thm
